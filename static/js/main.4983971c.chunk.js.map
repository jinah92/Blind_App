{"version":3,"sources":["img/heart.png","img/heart_disabled.png","user/login.jsx","comment/commentItem.jsx","comment/comments.jsx","message/sendmessage.jsx","user/like.jsx","post/postItems.jsx","post/post.jsx","post/upload_post.jsx","user/contact.jsx","post/mypostItems.jsx","post/mypost.jsx","user/myinfo.jsx","message/ReceivedMsg.jsx","message/SentMsg.jsx","message/message.jsx","maincontainer.jsx","index.jsx"],"names":["module","exports","axios","defaults","withCredentials","headers","Login","state","login_nick","props","nick","loginStyle","logoutStyle","registerStyle","value","logout","post","then","returnData","data","message","$","removeCookie","setState","emailE","pwdE","login","send_param","email","pwd","console","log","result","nickname","alert","cookie","id","user_insert","new_nickE","new_emailE","new_pwdE","company","new_companyE","member","register","loginHome","userInfo","display","this","width","position","top","right","bottom","left","margin","textAlign","style","Form","Group","controlId","Control","type","placeholder","ref","required","Button","variant","onClick","ButtonToolbar","as","onChange","handleChange","Component","CommentItem","deleteComment","commentId","ShowComments","comments","entries","map","comment","key","format","createdAt","Badge","size","Comments","a","postId","comment_insert","commentE","memberId","focus","InputGroup","className","FormControl","aria-label","aria-describedby","SendMessage","handleValueChange","e","nextState","target","name","sendMessage","sendee_id","userId","sender_id","sender_nick","text","handleClose","handleClickOpen","open","file","birthday","gender","job","fileName","ShowMessage","user","show","div_style","visibility","float","onClose","label","rows","cols","withStyles","theme","hidden","Like","liked","heart","heart_disabled","likePost","user_id","on","toggleClass","post_id","heartStyle","heartStyle_disabled","src","HeartImg","height","HeartImg_disbaled","disabled","like","PostItems","like_btn","nick_style","posts","Col","md","span","offset","Label","updatedAt","ButtonGroup","content","Post","ShowPosts","UploadPost","upload_post","postContent","Contact","MyPostItems","myposts","update_style","default_style","update_post_final","updated_content","showPosts","update_post","update_cancel","createDate","updateDate","default","update","superDelete","bind","MyPost","visible","update_form","delete_post","filteredItems","filter","item","myPostList","superUpdate","checkMyPost","MyInfo","deleteMember","window","confirm","user_update","new_pw","new_nick","new_company","mainStyle","user_default","updateMember","cnt_post","counts","postCount","ListGroup","Item","ReceivedMsg","received_msg","SentMsg","sent_msg","receiver_nick","MyMessage","ShowMessages","form","showMessages","MainContainer","reRender","Navbar","bg","Brand","exact","to","Nav","Link","NavDropdown","title","inline","Text","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4983971c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.0a039376.png\";","module.exports = __webpack_public_path__ + \"static/media/heart_disabled.915866be.png\";","import React, {Component} from 'react';\r\nimport {NavLink, Route, HashRouter} from 'react-dom';\r\nimport {Form, Button, ButtonToolbar} from \"react-bootstrap\";\r\nimport $ from 'jquery';\r\nimport {} from 'jquery.cookie';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass Login extends Component {\r\n    state={\r\n        login_nick: this.props.nick,\r\n        loginStyle: \"inline-block\",\r\n        logoutStyle: \"none\",\r\n        registerStyle: \"none\",\r\n        value: \"\"\r\n    }\r\n    logout=()=>{\r\n        axios.post('http://localhost:9090/member/logout', {headers})\r\n        .then((returnData)=>{\r\n            if(returnData.data.message){\r\n                $.removeCookie(\"login_nick\");\r\n                $.removeCookie(\"login_id\");\r\n                this.setState({\r\n                    loginStyle: \"inline-block\",\r\n                    logoutStyle: \"none\"\r\n                });\r\n            }\r\n            this.emailE.value=\"\";\r\n            this.pwdE.value=\"\";\r\n        });\r\n    }\r\n    login=()=>{\r\n        const send_param={\r\n            headers,\r\n            email: this.emailE.value,\r\n            pwd: this.pwdE.value\r\n        }\r\n        axios.post('http://localhost:9090/member/login', send_param)\r\n        .then((returnData)=>{\r\n            console.log(returnData.data);\r\n            if(returnData.data.result.nickname){\r\n                const nickname = returnData.data.result.nickname;\r\n                alert(nickname + \"님, 환영합니다!\");\r\n                $.cookie(\"login_nick\", returnData.data.result.nickname);\r\n                $.cookie(\"login_id\", returnData.data.result.id);\r\n                this.setState({\r\n                    login_nick: returnData.data.result.nickname,\r\n                    loginStyle: \"none\",\r\n                    logoutStyle: \"inline-block\"\r\n                });\r\n            }else{\r\n                alert(\"로그인 실패\");\r\n            }\r\n            \r\n        });\r\n    }\r\n    user_insert=()=>{\r\n        const send_param = {\r\n            nickname: this.new_nickE.value,\r\n            email: this.new_emailE.value,\r\n            pwd: this.new_pwdE.value,\r\n            company: this.new_companyE.value\r\n        }\r\n        $.post('http://localhost:9090/member/insert', send_param)\r\n        .then((returnData)=>{\r\n            var nickname = returnData.member.nickname;\r\n            if(returnData.member){\r\n                alert(nickname +\"님, 가입 성공\");\r\n                this.setState({\r\n                    loginStyle: \"inline-block\",\r\n                    registerStyle: \"none\",\r\n                });\r\n            }else{\r\n                alert(\"insert member denied\");\r\n            }\r\n        });\r\n        \r\n\r\n    }\r\n    register=()=>{\r\n        this.setState({\r\n            loginStyle: \"none\",\r\n            logoutStyle: \"none\",\r\n            registerStyle: \"inline-block\",\r\n        });\r\n        this.new_emailE.value=\"\";\r\n        this.new_nickE.value=\"\";\r\n        this.new_companyE.value=\"\";\r\n        this.new_pwdE.value=\"\";\r\n    }\r\n    loginHome=()=>{\r\n        this.setState({\r\n            loginStyle: \"inline-block\",\r\n            registerStyle: \"none\",\r\n        });\r\n    }\r\n    userInfo=()=>{\r\n        alert($.cookie(\"login_nick\"));\r\n    }\r\n    render(){\r\n        const loginStyle = {\r\n            display: this.state.loginStyle,\r\n            width: \"30%\",\r\n            position:\"fixed\",\r\n            top:100,\r\n            right:0,\r\n            bottom:0,\r\n            left:0,\r\n            margin:\"auto\",\r\n            textAlign: \"center\"\r\n        }\r\n        const logoutStyle = {\r\n            display: this.state.logoutStyle,\r\n            width: \"30%\",\r\n            position:\"fixed\",\r\n            top:100,\r\n            right:0,\r\n            bottom:0,\r\n            left:0,\r\n            margin:\"auto\",\r\n            textAlign: \"center\"\r\n        }\r\n        const registerStyle = {\r\n            display: this.state.registerStyle,\r\n            width: \"30%\",\r\n            position:\"fixed\",\r\n            top:100,\r\n            right:0,\r\n            bottom:0,\r\n            left:0,\r\n            margin:\"auto\",\r\n            textAlign: \"center\"\r\n        }\r\n        let login_nick;\r\n        if($.cookie(\"login_nick\")){\r\n            login_nick=$.cookie(\"login_nick\");\r\n            loginStyle.display=\"none\";\r\n            logoutStyle.display=\"inline-block\";\r\n        }\r\n        return(\r\n            <div>\r\n                    <div style={loginStyle}>\r\n                        <h2>로그인</h2>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" ref={ref=>this.emailE=ref} required/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control type=\"password\" placeholder=\"Enter Password\" ref={ref=>this.pwdE=ref} required/>\r\n                        </Form.Group>\r\n                    \r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.login}>로그인</Button> \r\n                        <Button variant=\"success\" type=\"submit\" onClick={this.register}>회원가입</Button>\r\n                    </div>\r\n\r\n                <div style={logoutStyle}>\r\n                    {login_nick} 님, 접속\r\n                    <ButtonToolbar>\r\n                        <Button variant=\"warning\" type=\"submit\" onClick={this.logout}>로그아웃</Button>\r\n                        <Button onClick={this.userInfo}>회원정보</Button>\r\n                    </ButtonToolbar>\r\n                </div>\r\n\r\n                <div style={registerStyle}>\r\n                    <h2>회원가입</h2>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"email\" placeholder=\"이메일\" ref={ref=>this.new_emailE=ref} required/><br />\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control type=\"password\" placeholder=\"Enter Password\" ref={ref=>this.new_pwdE=ref} required/><br />\r\n                        </Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"닉네임\" ref={ref=>this.new_nickE=ref} required/><br />\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Control as=\"select\" value={this.state.value} onChange={this.handleChange}>\r\n                                <option>회사의 산업분야</option>\r\n                                <option value=\"agriculture\">농업, 임업 및 어업</option>\r\n                                <option value=\"mining\">광업</option>\r\n                                <option value=\"manufacturing\">제조업</option>\r\n                                <option value=\"electronic\">전기 공급업</option>\r\n                                <option value=\"water\">수도, 하수 및 폐기물 처리</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"회사명\" ref={ref=>this.new_companyE=ref} required/><br />\r\n                    </Form.Group>\r\n                    <ButtonToolbar>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.user_insert}>제출</Button>\r\n                        <Button variant=\"warning\" type=\"submit\" onClick={this.loginHome}>돌아가기</Button>\r\n                    </ButtonToolbar>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport {Badge} from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport $ from 'jquery';\r\n\r\nclass CommentItem extends Component {\r\n    deleteComment=(commentId)=>{\r\n        const send_param={commentId};\r\n        console.log(send_param);\r\n        $.post('http://localhost:9090/comment/delete', send_param, (returnData)=>{\r\n            if(returnData.message){\r\n                alert('댓글 삭제 성공');\r\n                this.props.ShowComments();\r\n            }else{\r\n                alert('댓글 삭제 실패');\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        const comments = this.props.entries.map((comment)=>{\r\n            let commentId=comment.id;\r\n            return <div key={comment.id}>\r\n                    {comment.member.nickname}: {comment.comment} <Moment format=\"YYYY-MM-DD HH:mm\">{comment.createdAt}</Moment> <Badge variant=\"danger\" size=\"sm\" onClick={()=>{this.deleteComment(commentId)}}>댓글 삭제</Badge>\r\n                    </div>\r\n        });\r\n        return(\r\n            <ol>\r\n                {comments}\r\n            </ol>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default CommentItem;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport CommentItem from './commentItem';\r\nimport $ from 'jquery';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass Comments extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            comments: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowComments();\r\n    }\r\n    ShowComments=async()=>{\r\n        const commentId=this.props.postId;\r\n        const send_param={commentId, headers};\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/comment/allcomments', send_param);\r\n            if(result.data.comments){\r\n                this.setState({\r\n                    comments: result.data.comments\r\n                });\r\n            }\r\n            console.log(result);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    comment_insert = async()=>{\r\n        const send_param ={\r\n            headers,\r\n            comment: this.commentE.value,\r\n            postId: this.props.postId,\r\n            memberId: $.cookie('login_id')\r\n        }\r\n        try{\r\n            await axios.post('http://localhost:9090/comment/insert', send_param)\r\n            .then((returnData)=>{\r\n                if(returnData.data.message){\r\n                    alert(\"댓글 등록완료\");\r\n                    this.ShowComments();\r\n                }else{\r\n                    alert(\"댓글 등록실패\");\r\n                }\r\n                this.commentE.value=\"\";\r\n                this.commentE.focus();\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }     \r\n    render(){\r\n        return(\r\n            <div>\r\n                <InputGroup size=\"sm\" className=\"mb-3\">\r\n                    <FormControl ref={ref=>this.commentE=ref} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                    <Button onClick={this.comment_insert} size=\"sm\" variant=\"outline-dark\">댓글 등록</Button>\r\n                </InputGroup>\r\n                    <CommentItem entries={this.state.comments} postId={this.props.postId} ShowComments={this.ShowComments}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;","import React, {Component} from 'react';\r\nimport {Button, Badge, Form} from 'react-bootstrap';\r\nimport axios, {post} from 'axios';\r\nimport $ from 'jquery';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n      display: 'none'\r\n    }\r\n});\r\n\r\nclass SendMessage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            message: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false,\r\n            show: 'visible'\r\n        }\r\n        /* this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n        this.handleFileChange = this.handleFileChange.bind(this)\r\n        this.handleValueChange = this.handleValueChange.bind(this)\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n        this.handleClickOpen = this.handleClickOpen.bind(this)\r\n        this.handleClose = this.handleClose.bind(this); */\r\n    }\r\n    handleValueChange=(e)=>{\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n    sendMessage=async()=>{\r\n        const sendee_id=this.props.userId;\r\n        const sender_id=$.cookie(\"login_id\");\r\n        const sender_nick=$.cookie('login_nick');\r\n        const message=this.text.value;\r\n        console.log(message);\r\n        const send_param={sendee_id, sender_id, sender_nick, message};\r\n        try{\r\n            const result= await axios.post('http://localhost:9090/message/send', send_param);\r\n            if(result.data.message){\r\n                alert('쪽지보내기 성공');\r\n                this.handleClose();\r\n            }else{\r\n                alert('쪽지보내기 실패');\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleClickOpen=()=>{\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n    handleClose=()=>{\r\n        this.setState({\r\n            file: null,\r\n            message: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.ShowMessage();\r\n    }\r\n    ShowMessage=()=>{\r\n        let nick=this.props.user;\r\n        if($.cookie('login_nick') === nick){\r\n            this.setState({show: 'hidden'});\r\n        }else{\r\n            this.setState({show: 'visible'});\r\n        }\r\n    }\r\n    render(){\r\n        const div_style={\r\n            visibility: this.state.show,\r\n            float: \"right\"\r\n        }\r\n        return(\r\n            <div style={div_style}>\r\n                <Badge variant=\"info\" onClick={this.handleClickOpen}>쪽지</Badge>\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>쪽지 보내기</DialogTitle>\r\n                    <DialogContent>\r\n                        <Form.Control  label=\"보내실 내용\" as=\"textarea\" rows='10' cols='50' ref={ref=>this.text=ref}/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"dark\" size=\"sm\" onClick={this.sendMessage}>보내기</Button>\r\n                        <Button variant=\"dark\" size=\"sm\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SendMessage);","import React, {Component} from 'react';\r\nimport {Button, Badge} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport '../css/btn_style.css';\r\nimport HeartImg from '../img/heart.png';\r\nimport HeartImg_disbaled from '../img/heart_disabled.png';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass Like extends Component {\r\n    state={\r\n        liked: 0,\r\n        heart: \"none\",\r\n        heart_disabled: \"\"\r\n    }\r\n    likePost=async(user_id)=>{\r\n        $(\".heart\").on('click', ()=>{\r\n            $(this).toggleClass(\"heart-blast\");\r\n        });\r\n        const post_id=this.props.post;\r\n        const send_param={post_id, user_id, headers};\r\n        if(!this.state.liked){\r\n            const result = await axios.post('http://localhost:9090/post/like', send_param);\r\n            if(result.data.message){\r\n                alert('좋아요!');\r\n                this.setState({liked: 1, heart: \"\", heart_disabled: \"none\"});\r\n                this.props.show();\r\n            }else{\r\n                alert('시스템 에러(좋아요)');\r\n            }\r\n        }else{\r\n            const result = await axios.post('http://localhost:9090/post/unlike', send_param);\r\n            if(result.data.message){\r\n                alert('좋아요 취소!');\r\n                this.setState({liked: 0, heart: \"none\",  heart_disabled: \"\"});\r\n                this.props.show();\r\n            }else{\r\n                alert('시스템 에러(좋아요 취소)');\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        const heartStyle={\r\n            display: this.state.heart\r\n        }\r\n        const heartStyle_disabled={\r\n            display: this.state.heart_disabled\r\n        }\r\n        return(\r\n            <div >\r\n                <Button variant=\"light\" size=\"sm\" onClick={()=>{this.likePost(this.props.user)}}><img style={heartStyle} src={HeartImg}  width='15' height='15' /><img style={heartStyle_disabled} src={HeartImg_disbaled}  width='15' height='15' /></Button>\r\n                <Button variant=\"light\" size=\"sm\" disabled={this.state.liked}><Badge variant=\"light\">{this.props.like}</Badge></Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Like;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {Form, Badge, Col, Button, ButtonGroup} from 'react-bootstrap';\r\nimport {Timeline, TimelineEvent} from 'react-event-timeline';\r\nimport Moment from 'react-moment';\r\nimport Comments from '../comment/comments';\r\nimport SendMessage from '../message/sendmessage';\r\nimport Like from '../user/like';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass PostItems extends Component {\r\n    state={\r\n        message: \"\"\r\n    };\r\n    render(){\r\n        const like_btn={\r\n            float: \"right\"\r\n        }\r\n        const nick_style={\r\n            float: \"left\"\r\n        }\r\n        let posts = this.props.entries.map((post)=>{\r\n            return <Col md={{ span: 6, offset: 3 }}>\r\n                    <Timeline>\r\n                            <TimelineEvent key={post.id}>\r\n                                <Form>\r\n                                    <Form.Label as=\"textarea\" rows=\"2\" style={nick_style}>\r\n                                        <h6><strong>{post.member.nickname}</strong>&nbsp;\r\n                                        <SendMessage user={post.member.nickname} userId={post.member.id} message={this.state.message}/></h6>\r\n                                    </Form.Label>&nbsp; &nbsp; &nbsp; &nbsp; \r\n                                    생성일: <Moment format=\"YYYY-MM-DD HH:mm\">{post.createdAt}</Moment>&nbsp; &nbsp; \r\n                                    수정일: <Moment format=\"YYYY-MM-DD HH:mm\">{post.updatedAt}</Moment>\r\n                                    <ButtonGroup style={like_btn}>\r\n                                        <Like post={post.id} user={post.member.id} like={post.like} show={this.props.show}/>\r\n                                    </ButtonGroup><hr />\r\n                                    <h6>  {post.content} </h6>\r\n                                </Form>\r\n                                <Form>\r\n                                    <Comments postId={post.id}/>\r\n                                </Form>\r\n                            </TimelineEvent>\r\n                    </Timeline>\r\n                    </Col>\r\n            \r\n                    {/* <div key={post.id} */} /* onClick={this.props.superDelete.bind(null, post.id)}>/*}\r\n                    {/* <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {post.content} {post.id}\r\n                            </Card.Text>\r\n                            <Card.Link href=\"#\">Card Link</Card.Link>\r\n                            <Card.Link href=\"#\">Another Link</Card.Link>\r\n                        </Card.Body>\r\n                        <Button onClick={this.props.superDelete.bind(null, post.id)}>삭제하기</Button> \r\n                        <Comments />\r\n                    </Card>\r\n                    <br />\r\n                    </div> */});\r\n       /*  }); */\r\n        console.log(posts);\r\n\r\n        return(\r\n            <ul className=\"thePost\">\r\n                {posts}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostItems;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport PostItems from './postItems';\r\nimport {Button, Form} from 'react-bootstrap';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass Post extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            posts: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowPosts();\r\n    }\r\n    ShowPosts=async ()=>{\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/post/allpost', headers);\r\n            if(result.data.posts){\r\n                this.setState({\r\n                    posts: result.data.posts\r\n                });\r\n            }\r\n            console.log(result);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const PostStyle={\r\n            width: \"300\"\r\n        }\r\n        return(\r\n            <div>\r\n                <div style={PostStyle}>\r\n                    <PostItems entries={this.state.posts} show={this.ShowPosts}/>   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport $ from 'jquery';\r\nimport { HashRouter , NavLink, Route} from 'react-router-dom';\r\nimport Post from './post';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass UploadPost extends Component {\r\n    upload_post = async()=>{\r\n        if($.cookie(\"login_id\")){\r\n            if(!this.postContent.value){\r\n                alert('내용을 입력해주세요');\r\n            }else{\r\n                const send_param ={\r\n                    headers,\r\n                    content: this.postContent.value,\r\n                    memberId: $.cookie(\"login_id\")\r\n                }\r\n                try{\r\n                    await axios.post('http://localhost:9090/post/upload', send_param)\r\n                    .then((returnData)=>{\r\n                        if(returnData.data.message){\r\n                            alert(\"Post 등록완료\");\r\n                        }else{\r\n                            alert(\"Post 등록실패\");\r\n                        }\r\n                        this.postContent.value=\"\";\r\n                        this.postContent.focus();\r\n                    });\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }else{\r\n            alert('로그인이 필요합니다');\r\n        }        \r\n    }     \r\n    render(){\r\n        const upload_form={\r\n            width: \"50%\",\r\n            height: \"80%\",\r\n            position:\"fixed\",\r\n            top:100,\r\n            right:0,\r\n            bottom:0,\r\n            left:0,\r\n            margin:\"auto\",\r\n            textAlign: \"center\"\r\n        }\r\n        return(\r\n            <div className=\"comment_form\" style={upload_form}>\r\n                <h2>여러분의 소식을 들려주세요</h2><hr />\r\n                <Form>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Control as=\"textarea\" rows=\"5\" cols=\"10\" placeholder=\"포스트 내용\" ref={ref=>this.postContent=ref}/>\r\n                    </Form.Group>\r\n                    <Button onClick={this.upload_post}>글 등록</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadPost;","import React, {Component} from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\n\r\nclass Contact extends Component {\r\n    render(){\r\n        const ContactStyle ={\r\n            width: \"30%\",\r\n            position:\"fixed\",\r\n            top:100,\r\n            right:0,\r\n            bottom:0,\r\n            left:0,\r\n            margin:\"auto\",\r\n            textAlign: \"center\"\r\n        }\r\n        return(\r\n            <div>\r\n                <div style={ContactStyle}>\r\n                    <h2>Contact</h2>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" ref={ref=>this.emailE=ref} required/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control as=\"textarea\" rows=\"5\" cols=\"15\"  placeholder=\"Enter comment\" ref={ref=>this.commentE=ref} required/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={this.login}>제출하기</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Moment from 'react-moment';\r\nimport {Button, InputGroup, FormControl} from 'react-bootstrap';\r\n\r\nclass MyPostItems extends Component {\r\n    state={\r\n        myposts: this.props.entries,\r\n        update_style: \"none\",\r\n        default_style: \"\"\r\n    }\r\n    update_post_final= async ()=>{\r\n        const post_id=this.props.id;\r\n        const content=this.updated_content.value;\r\n        const send_param = {post_id, content};\r\n        try{\r\n            const result=await axios.post('http://localhost:9090/post/update', send_param);\r\n            if(result.data.result){\r\n                alert('수정 완료');\r\n                this.setState({\r\n                    myposts: result.data.result,\r\n                    update_style: \"none\",\r\n                    default_style: \"\"\r\n                });\r\n                this.props.showPosts();\r\n            }else{\r\n                alert('수정 오류');\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n            alert('시스템 오류');\r\n        }        \r\n    }\r\n    update_post=()=>{\r\n        this.setState({\r\n            update_style: \"\",\r\n            default_style: \"none\"\r\n        });\r\n    }\r\n    update_cancel=()=>{\r\n        this.setState({\r\n            update_style: \"none\",\r\n            default_style: \"\"\r\n        });\r\n    }\r\n    render(){\r\n        const update_style={\r\n            display: this.state.update_style\r\n        }\r\n        const default_style={\r\n            display: this.state.default_style\r\n        }\r\n        return(\r\n            <TableRow>\r\n                <TableCell>{this.props.id}</TableCell>\r\n                <TableCell>{this.props.nickname}</TableCell>\r\n                <TableCell><Moment format=\"YYYY-MM-DD HH:mm\">{this.props.createDate}</Moment></TableCell>\r\n                <TableCell><Moment format=\"YYYY-MM-DD HH:mm\">{this.props.updateDate}</Moment></TableCell>\r\n                <TableCell ref={ref=>this.default=ref} style={default_style}>{this.props.content}</TableCell>\r\n                <InputGroup className=\"mb-3\" ref={ref=>this.update=ref} style={update_style}>\r\n                    <FormControl as=\"textarea\" aria-label=\"With textarea\" ref={ref=>this.updated_content=ref}>{this.props.content}</FormControl>\r\n                </InputGroup>\r\n                <TableCell style={default_style}><Button variant=\"outline-warning\" onClick={this.update_post}>수정</Button></TableCell>\r\n                <TableCell style={update_style}>\r\n                    <Button variant=\"light\" onClick={this.update_cancel}>취소</Button>\r\n                    <Button variant=\"success\" onClick={this.update_post_final}>수정완료</Button>\r\n                </TableCell>\r\n                <TableCell><Button variant=\"outline-danger\" onClick={this.props.superDelete.bind(null, this.props.id)}>삭제</Button></TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPostItems;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport MyPostItems from './mypostItems';\r\nimport {Col} from 'react-bootstrap';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            myposts: [],\r\n            update_form: \"none\",\r\n            visible: \"hidden\"\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowPosts();\r\n    }\r\n    ShowPosts=async ()=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        console.log(user_id);\r\n        const send_param={user_id, headers};\r\n        if(user_id){\r\n            try{\r\n                const result = await axios.post('http://localhost:9090/post/allpost_mine', send_param);\r\n                if(result.data.myposts){\r\n                    this.setState({\r\n                        myposts: result.data.myposts\r\n                    });\r\n                    this.setState({visible: \"visible\"});\r\n                }\r\n                console.log(result.data);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }else{\r\n            alert('로그인이 필요합니다');\r\n        }\r\n    }\r\n    update_post=(post_id)=>{\r\n        this.setState({\r\n            update_form: \"inline-block\"\r\n        });\r\n        this.ShowPosts();\r\n    }\r\n    delete_post=(post_id)=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        const send_param={post_id, user_id};\r\n        console.log(send_param);\r\n        $.post('http://localhost:9090/post/delete', send_param, (returnData)=>{\r\n            if(returnData.result){\r\n                alert(\"Post 삭제완료\");\r\n                const filteredItems = this.state.myposts.filter((item)=>{\r\n                    return item.key !== post_id\r\n                });\r\n                this.setState({\r\n                    myposts: filteredItems\r\n                });\r\n                this.ShowPosts();\r\n            }else{\r\n                alert(\"삭제 오류\");\r\n            }\r\n        });\r\n    }\r\n/*     checkMyPost=()=>{\r\n        if(this.state.myposts===[]){\r\n            const result = '등록된 게시글이 없습니다.';\r\n        }else{\r\n            const result = this.state.myposts.map((post) => {\r\n                return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                });\r\n        }\r\n        return {result};\r\n    } */\r\n   \r\n    render(){\r\n        const myPostList={\r\n            visibility: this.state.visible\r\n        }\r\n        return(\r\n            <div>\r\n                <div style={myPostList}>\r\n                    <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                    <TableCell>게시번호</TableCell>\r\n                    <TableCell>작성자</TableCell>\r\n                    <TableCell>생성일</TableCell>\r\n                    <TableCell>수정일</TableCell>\r\n                    <TableCell>내용</TableCell>\r\n                    <TableCell></TableCell>\r\n                    <TableCell></TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.myposts.map((post) => {\r\n                        return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} updateDate={post.updatedAt} content={post.content} \r\n                                superDelete={this.delete_post} superUpdate={this.update_post} entries={this.state.myposts} showPosts={this.ShowPosts}/>\r\n                        })}\r\n                        {this.checkMyPost}\r\n                    </TableBody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPost;","import React, {Component} from 'react';\r\nimport {NavLink, Route, HashRouter} from 'react-dom';\r\nimport {ListGroup, Col, Button, Form, ButtonToolbar, Badge} from 'react-bootstrap';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyInfo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            mainStyle: \"visible\",\r\n            registerStyle: \"hidden\",\r\n            postCount: 0\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.cnt_post();\r\n    }\r\n    deleteMember=()=>{\r\n        const user_id=$.cookie('login_id');\r\n        const send_param={user_id};\r\n        const check = window.confirm('계정을 삭제하시겠습니까?');\r\n        if(check){\r\n            $.post('http://localhost:9090/member/delete', send_param, (returnData)=>{\r\n                if(returnData.message){\r\n                    alert('계정삭제 완료');\r\n                    $.removeCookie(\"login_nick\");\r\n                    $.removeCookie(\"login_id\");\r\n                }else{\r\n                    alert('계정삭제 오류');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    user_update=async()=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        const new_pw=this.new_pwdE.value;\r\n        const new_nick=this.new_nickE.value;\r\n        const new_company=this.new_companyE.value;\r\n        console.log(user_id);\r\n        const send_param={user_id, new_pw, new_nick, new_company, headers};\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/member/update', send_param);\r\n            if(result.data.result){\r\n                alert('회원정보 수정 성공');\r\n                $.cookie(\"login_nick\", result.data.result.nickname);\r\n                this.setState({\r\n                    mainStyle: \"visible\",\r\n                    registerStyle: \"hidden\"\r\n                });\r\n            }\r\n            console.log(result.data);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    user_default=()=>{\r\n        this.setState({\r\n            mainStyle: \"visible\",\r\n            registerStyle: \"hidden\"\r\n        });\r\n    }\r\n    updateMember=async()=>{\r\n        this.setState({\r\n            mainStyle: \"hidden\",\r\n            registerStyle: \"visible\"\r\n        });\r\n    }\r\n    cnt_post=async()=>{\r\n        const user_id=$.cookie('login_id');\r\n        const send_param={user_id, headers};\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/member/postCount', send_param);\r\n            console.log(result.data.counts);\r\n            this.setState({\r\n                postCount: result.data.counts\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    render(){\r\n        const div_style={\r\n            margin: 50\r\n        }\r\n        const mainStyle ={\r\n            visibility: this.state.mainStyle\r\n        }\r\n        const registerStyle = {\r\n            visibility: this.state.registerStyle,\r\n            width: \"30%\",\r\n            position:\"fixed\",\r\n            top:100,\r\n            right:0,\r\n            bottom:0,\r\n            left:0,\r\n            margin:\"auto\",\r\n            textAlign: \"center\"\r\n        }\r\n        \r\n        return(\r\n            <div style={div_style}>\r\n                <Col md={{ span: 6, offset: 3 }} style={mainStyle}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>나의 게시글 <Badge variant=\"info\">{this.state.postCount}</Badge> </ListGroup.Item>\r\n                        <ListGroup.Item>관심 게시글</ListGroup.Item>\r\n                        <ListGroup.Item>관심 토픽</ListGroup.Item>\r\n                        <ListGroup.Item><Button variant=\"warning\" onClick={this.updateMember}>회원정보 수정</Button><Button variant=\"danger\" onClick={this.deleteMember}>회원 탈퇴</Button></ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <div style={registerStyle}>\r\n                    <h2>회원정보 수정</h2>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"email\" placeholder=\"이메일\" disabled >{}</Form.Control><br />\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Control type=\"password\" placeholder=\"Enter Password\" ref={ref=>this.new_pwdE=ref} required/><br />\r\n                        </Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"닉네임\" ref={ref=>this.new_nickE=ref} required/><br />\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Control as=\"select\" value={this.state.value} onChange={this.handleChange}>\r\n                                <option>회사의 산업분야</option>\r\n                                <option value=\"agriculture\">농업, 임업 및 어업</option>\r\n                                <option value=\"mining\">광업</option>\r\n                                <option value=\"manufacturing\">제조업</option>\r\n                                <option value=\"electronic\">전기 공급업</option>\r\n                                <option value=\"water\">수도, 하수 및 폐기물 처리</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Control type=\"text\" placeholder=\"회사명\" ref={ref=>this.new_companyE=ref} required/><br />\r\n                    </Form.Group>\r\n                    <ButtonToolbar>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.user_update}>수정하기</Button>\r\n                        <Button variant=\"warning\" type=\"submit\" onClick={this.user_default}>돌아가기</Button>\r\n                    </ButtonToolbar>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyInfo;","import React, {Component} from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Moment from 'react-moment';\r\nimport {Button, InputGroup, FormControl} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass ReceivedMsg extends Component {\r\n    state={\r\n        received_msg: this.props.entries,\r\n        update_style: \"none\",\r\n        default_style: \"\"\r\n    }\r\n    render(){\r\n        return(\r\n            <TableRow>\r\n                <TableCell>{this.props.id}</TableCell>\r\n                <TableCell>{this.props.sender_nick}</TableCell>\r\n                <TableCell><Moment format=\"YYYY-MM-DD HH:mm\">{this.props.createDate}</Moment></TableCell>\r\n                <TableCell><Moment format=\"YYYY-MM-DD HH:mm\">{this.props.updateDate}</Moment></TableCell>\r\n                <TableCell ref={ref=>this.default=ref}>{this.props.message}</TableCell>\r\n                {/* <InputGroup className=\"mb-3\" ref={ref=>this.update=ref}>\r\n                    <FormControl as=\"textarea\" aria-label=\"With textarea\" ref={ref=>this.updated_content=ref}>{this.props.content}</FormControl>\r\n                </InputGroup> */}\r\n                {/* <TableCell style={default_style}><Button variant=\"outline-warning\" onClick={this.update_post}>수정</Button></TableCell>\r\n                <TableCell style={update_style}>\r\n                    <Button variant=\"light\" onClick={this.update_cancel}>취소</Button>\r\n                    <Button variant=\"success\" onClick={this.update_post_final}>수정완료</Button>\r\n                </TableCell>\r\n                <TableCell><Button variant=\"outline-danger\" onClick={this.props.superDelete.bind(null, this.props.id)}>삭제</Button></TableCell> */}\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReceivedMsg;","import React, {Component} from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Moment from 'react-moment';\r\nimport {Button, InputGroup, FormControl} from 'react-bootstrap';\r\n\r\nclass SentMsg extends Component {\r\n    state={\r\n        sent_msg: this.props.entries,\r\n        update_style: \"none\",\r\n        default_style: \"\"\r\n    }\r\n    render(){\r\n        return(\r\n            <TableRow>\r\n                <TableCell>{this.props.id}</TableCell>\r\n                <TableCell>{this.props.receiver_nick}</TableCell>\r\n                <TableCell><Moment format=\"YYYY-MM-DD HH:mm\">{this.props.createDate}</Moment></TableCell>\r\n                <TableCell><Moment format=\"YYYY-MM-DD HH:mm\">{this.props.updateDate}</Moment></TableCell>\r\n                <TableCell ref={ref=>this.default=ref}>{this.props.message}</TableCell>\r\n                {/* <InputGroup className=\"mb-3\" ref={ref=>this.update=ref}>\r\n                    <FormControl as=\"textarea\" aria-label=\"With textarea\" ref={ref=>this.updated_content=ref}>{this.props.content}</FormControl>\r\n                </InputGroup> */}\r\n                {/* <TableCell style={default_style}><Button variant=\"outline-warning\" onClick={this.update_post}>수정</Button></TableCell>\r\n                <TableCell style={update_style}>\r\n                    <Button variant=\"light\" onClick={this.update_cancel}>취소</Button>\r\n                    <Button variant=\"success\" onClick={this.update_post_final}>수정완료</Button>\r\n                </TableCell>\r\n                <TableCell><Button variant=\"outline-danger\" onClick={this.props.superDelete.bind(null, this.props.id)}>삭제</Button></TableCell> */}\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SentMsg;","import React, {Component} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport ReceivedMsg from './ReceivedMsg';\r\nimport SentMsg from './SentMsg';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyMessage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            sent_msg: [],\r\n            received_msg: [],\r\n            update_form: \"none\",\r\n            visible: \"visible\"\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowMessages();\r\n    }\r\n    ShowMessages=async ()=>{\r\n        const user_id=$.cookie('login_id');\r\n        console.log(user_id);\r\n        const send_param={user_id, headers};\r\n        if(user_id){\r\n            try{\r\n                const result=await axios.post('http://localhost:9090/message/allmessages', send_param);\r\n                if(result.data.received_msg){\r\n                    this.setState({received_msg: result.data.received_msg});\r\n                }\r\n                if(result.data.sent_msg){\r\n                    this.setState({sent_msg: result.data.sent_msg});\r\n                }\r\n                console.log(result.data);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }else{\r\n            alert('로그인이 필요합니다.');\r\n        }\r\n    }\r\n    render(){\r\n        const myPostList={\r\n            visibility: this.state.visible\r\n        }\r\n        const form={\r\n            margin: \"auto\"\r\n        }\r\n        return(\r\n            <div>\r\n                <div style={form}>\r\n                    <div>받은 쪽지함</div>\r\n                    <div style={myPostList}>\r\n                        <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                        <TableCell>쪽지번호</TableCell>\r\n                        <TableCell>발신인</TableCell>\r\n                        <TableCell>생성일</TableCell>\r\n                        <TableCell>수정일</TableCell>\r\n                        <TableCell>내용</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.received_msg.map((message) => {\r\n                            return <ReceivedMsg key={message.id} id={message.id} sender_nick={message.sender_nick} createDate={message.createdAt} updateDate={message.updatedAt} message={message.message} \r\n                                    /* superDelete={this.delete_post} superUpdate={this.update_post}  */entries={this.state.received_msg} showMessages={this.ShowMessages}/>\r\n                            })}\r\n                            \r\n                        </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n                <br /><br />\r\n                <div style={form}>\r\n                    <div>보낸 쪽지함</div>\r\n                    <div style={myPostList}>\r\n                        <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                        <TableCell>쪽지번호</TableCell>\r\n                        <TableCell>수신인</TableCell>\r\n                        <TableCell>생성일</TableCell>\r\n                        <TableCell>수정일</TableCell>\r\n                        <TableCell>내용</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.sent_msg.map((message) => {\r\n                                return <SentMsg key={message.id} id={message.id} receiver_nick={message.member.nickname} createDate={message.createdAt} updateDate={message.updatedAt} message={message.message} \r\n                                        /* superDelete={this.delete_post} superUpdate={this.update_post}  */entries={this.state.sent_msg} showMessages={this.ShowMessages}/>\r\n                            })}\r\n                        </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyMessage;","import React, {Component} from 'react';\r\nimport Login from './user/login';\r\nimport Post from './post/post.jsx';\r\n// import Timeline from './timeline';\r\nimport UploadPost from './post/upload_post';\r\nimport Contact from './user/contact';\r\nimport MyPost from './post/mypost';\r\nimport MyInfo from './user/myinfo';\r\nimport MyMessage from './message/message';\r\nimport $ from 'jquery';\r\nimport {Route, NavLink, HashRouter} from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\nclass MainContainer extends Component {\r\n    state={\r\n        nickname: $.cookie(\"login_nick\")\r\n    }\r\n    componentDidMount(){\r\n        this.reRender();\r\n    }\r\n    reRender=()=>{\r\n\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <HashRouter>\r\n                    <Navbar bg=\"dark\" variant=\"dark\">\r\n                        <Navbar.Brand exact to =\"/\">우리들의 Blind</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\" /* style={loginStyle} */>\r\n                            <NavLink exact to='/'><Button>홈으로</Button></NavLink>\r\n                            <Nav.Link><NavLink to='/post'>타임라인</NavLink></Nav.Link>\r\n                            <NavDropdown title=\"내 포스트\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item><NavLink to=\"/uploadpost\">신규 등록</NavLink></NavDropdown.Item>\r\n                            <NavDropdown.Item><NavLink to=\"/mypost\">포스트 조회 및 수정</NavLink></NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title=\"회원정보\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item><NavLink to=\"/myinfo\">회원정보 조회 및 수정</NavLink></NavDropdown.Item>\r\n                                <NavDropdown.Item><NavLink to=\"/message\">쪽지함</NavLink></NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link><NavLink to='/contact'>Contact</NavLink></Nav.Link>\r\n                           \r\n                        </Nav>\r\n                        {/* <Nav className=\"mr-auto\">\r\n                            <Nav.Link><NavLink to='/login'>Enjoy</NavLink></Nav.Link>\r\n                        </Nav> */}\r\n                        <Form inline>\r\n                            <Navbar.Text>{this.state.nickname}</Navbar.Text>\r\n                        </Form>\r\n\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                            <Button variant=\"outline-info\">Search</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                        <div className=\"content\">\r\n                            <Route exact path='/' component={Login} nick={this.state.nickname} />\r\n                            <Route path='/uploadpost' component={UploadPost}/>\r\n                            <Route path='/post' component={Post} />\r\n                            <Route path='/contact' component={Contact} />\r\n                            <Route path='/mypost' component={MyPost} />\r\n                            <Route path='/myinfo' component={MyInfo}/>\r\n                            <Route path='/message' component={MyMessage}/>\r\n                        </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MainContainer from './maincontainer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <MainContainer />,\r\n    document.querySelector(\"#container\")\r\n);"],"sourceRoot":""}