{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import TableCell from'@material-ui/core/TableCell';import $ from'jquery';import axios from'axios';import ReceivedMsg from'./ReceivedMsg';import SentMsg from'./SentMsg';axios.defaults.withCredentials=true;var headers={withCredentials:true};var MyMessage=/*#__PURE__*/function(_Component){_inherits(MyMessage,_Component);function MyMessage(props){var _this;_classCallCheck(this,MyMessage);_this=_possibleConstructorReturn(this,_getPrototypeOf(MyMessage).call(this,props));_this.ShowMessages=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user_id,send_param,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user_id=$.cookie('login_id');console.log(user_id);send_param={user_id:user_id,headers:headers};if(!user_id){_context.next=18;break;}_context.prev=4;_context.next=7;return axios.post('http://localhost:9090/message/allmessages',send_param);case 7:result=_context.sent;if(result.data.received_msg){_this.setState({received_msg:result.data.received_msg});}if(result.data.sent_msg){_this.setState({sent_msg:result.data.sent_msg});}console.log(result.data);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](4);console.log(_context.t0);case 16:_context.next=19;break;case 18:alert('로그인이 필요합니다.');case 19:case\"end\":return _context.stop();}}},_callee,null,[[4,13]]);}));_this.state={sent_msg:[],received_msg:[],update_form:\"none\",visible:\"visible\"};return _this;}_createClass(MyMessage,[{key:\"componentDidMount\",value:function componentDidMount(){this.ShowMessages();}},{key:\"render\",value:function render(){var _this2=this;var myPostList={visibility:this.state.visible};var form={margin:\"auto\"};return React.createElement(\"div\",null,React.createElement(\"div\",{style:form},React.createElement(\"div\",null,\"\\uBC1B\\uC740 \\uCABD\\uC9C0\\uD568\"),React.createElement(\"div\",{style:myPostList},React.createElement(Table,null,React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,null,\"\\uCABD\\uC9C0\\uBC88\\uD638\"),React.createElement(TableCell,null,\"\\uBC1C\\uC2E0\\uC778\"),React.createElement(TableCell,null,\"\\uC0DD\\uC131\\uC77C\"),React.createElement(TableCell,null,\"\\uC218\\uC815\\uC77C\"),React.createElement(TableCell,null,\"\\uB0B4\\uC6A9\"))),React.createElement(TableBody,null,this.state.received_msg.map(function(message){return React.createElement(ReceivedMsg,{key:message.id,id:message.id,sender_nick:message.sender_nick,createDate:message.createdAt,updateDate:message.updatedAt,message:message.message/* superDelete={this.delete_post} superUpdate={this.update_post}  */,entries:_this2.state.received_msg,showMessages:_this2.ShowMessages});}))))),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{style:form},React.createElement(\"div\",null,\"\\uBCF4\\uB0B8 \\uCABD\\uC9C0\\uD568\"),React.createElement(\"div\",{style:myPostList},React.createElement(Table,null,React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,null,\"\\uCABD\\uC9C0\\uBC88\\uD638\"),React.createElement(TableCell,null,\"\\uC218\\uC2E0\\uC778\"),React.createElement(TableCell,null,\"\\uC0DD\\uC131\\uC77C\"),React.createElement(TableCell,null,\"\\uC218\\uC815\\uC77C\"),React.createElement(TableCell,null,\"\\uB0B4\\uC6A9\"))),React.createElement(TableBody,null,this.state.sent_msg.map(function(message){return React.createElement(SentMsg,{key:message.id,id:message.id,receiver_nick:message.member.nickname,createDate:message.createdAt,updateDate:message.updatedAt,message:message.message/* superDelete={this.delete_post} superUpdate={this.update_post}  */,entries:_this2.state.sent_msg,showMessages:_this2.ShowMessages});}))))));}}]);return MyMessage;}(Component);export default MyMessage;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/message/message.jsx"],"names":["React","Component","Table","TableBody","TableHead","TableRow","TableCell","$","axios","ReceivedMsg","SentMsg","defaults","withCredentials","headers","MyMessage","props","ShowMessages","user_id","cookie","console","log","send_param","post","result","data","received_msg","setState","sent_msg","alert","state","update_form","visible","myPostList","visibility","form","margin","map","message","id","sender_nick","createdAt","updatedAt","member","nickname"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport ReceivedMsg from './ReceivedMsg';\r\nimport SentMsg from './SentMsg';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyMessage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            sent_msg: [],\r\n            received_msg: [],\r\n            update_form: \"none\",\r\n            visible: \"visible\"\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowMessages();\r\n    }\r\n    ShowMessages=async ()=>{\r\n        const user_id=$.cookie('login_id');\r\n        console.log(user_id);\r\n        const send_param={user_id, headers};\r\n        if(user_id){\r\n            try{\r\n                const result=await axios.post('http://localhost:9090/message/allmessages', send_param);\r\n                if(result.data.received_msg){\r\n                    this.setState({received_msg: result.data.received_msg});\r\n                }\r\n                if(result.data.sent_msg){\r\n                    this.setState({sent_msg: result.data.sent_msg});\r\n                }\r\n                console.log(result.data);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }else{\r\n            alert('로그인이 필요합니다.');\r\n        }\r\n    }\r\n    render(){\r\n        const myPostList={\r\n            visibility: this.state.visible\r\n        }\r\n        const form={\r\n            margin: \"auto\"\r\n        }\r\n        return(\r\n            <div>\r\n                <div style={form}>\r\n                    <div>받은 쪽지함</div>\r\n                    <div style={myPostList}>\r\n                        <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                        <TableCell>쪽지번호</TableCell>\r\n                        <TableCell>발신인</TableCell>\r\n                        <TableCell>생성일</TableCell>\r\n                        <TableCell>수정일</TableCell>\r\n                        <TableCell>내용</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.received_msg.map((message) => {\r\n                            return <ReceivedMsg key={message.id} id={message.id} sender_nick={message.sender_nick} createDate={message.createdAt} updateDate={message.updatedAt} message={message.message} \r\n                                    /* superDelete={this.delete_post} superUpdate={this.update_post}  */entries={this.state.received_msg} showMessages={this.ShowMessages}/>\r\n                            })}\r\n                            \r\n                        </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n                <br /><br />\r\n                <div style={form}>\r\n                    <div>보낸 쪽지함</div>\r\n                    <div style={myPostList}>\r\n                        <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                        <TableCell>쪽지번호</TableCell>\r\n                        <TableCell>수신인</TableCell>\r\n                        <TableCell>생성일</TableCell>\r\n                        <TableCell>수정일</TableCell>\r\n                        <TableCell>내용</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.sent_msg.map((message) => {\r\n                                return <SentMsg key={message.id} id={message.id} receiver_nick={message.member.nickname} createDate={message.createdAt} updateDate={message.updatedAt} message={message.message} \r\n                                        /* superDelete={this.delete_post} superUpdate={this.update_post}  */entries={this.state.sent_msg} showMessages={this.ShowMessages}/>\r\n                            })}\r\n                        </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyMessage;"]},"metadata":{},"sourceType":"module"}