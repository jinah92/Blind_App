{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\comments.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport CommentItem from './commentItem';\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowComments = async () => {\n      const commentId = this.props.postId;\n      const send_param = {\n        commentId,\n        headers\n      };\n\n      try {\n        const result = await axios.post('http://localhost:9090/comment/allcomments', send_param);\n\n        if (result.data.comments) {\n          this.setState({\n            comments: result.data.comments\n          });\n        }\n\n        console.log(result);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.comment_insert = async () => {\n      const send_param = {\n        headers,\n        comment: this.commentE.value,\n        postId: this.props.postId\n      };\n\n      try {\n        await axios.post('http://localhost:9090/comment/insert', send_param).then(returnData => {\n          if (returnData.data.message) {\n            alert(\"댓글 등록완료\");\n            this.ShowComments();\n          } else {\n            alert(\"댓글 등록실패\");\n          }\n\n          this.commentE.value = \"\";\n          this.commentE.focus();\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    this.ShowComments();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      size: \"sm\",\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      ref: ref => this.commentE = ref,\n      \"aria-label\": \"Small\",\n      \"aria-describedby\": \"inputGroup-sizing-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.comment_insert,\n      size: \"sm\",\n      variant: \"outline-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\uB313\\uAE00 \\uB4F1\\uB85D\")), React.createElement(CommentItem, {\n      entries: this.state.comments,\n      postId: this.props.postId,\n      ShowComments: this.ShowComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/comments.jsx"],"names":["React","Component","axios","InputGroup","FormControl","Button","CommentItem","defaults","withCredentials","headers","Comments","constructor","props","ShowComments","commentId","postId","send_param","result","post","data","comments","setState","console","log","err","comment_insert","comment","commentE","value","then","returnData","message","alert","focus","state","componentDidMount","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,MAAjC,QAA8C,iBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEAJ,KAAK,CAACK,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,MAAMC,OAAO,GAAG;AAACD,EAAAA,eAAe,EAAE;AAAlB,CAAhB;;AAEA,MAAME,QAAN,SAAuBT,SAAvB,CAAiC;AAC7BU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,YATkB,GASL,YAAS;AAClB,YAAMC,SAAS,GAAC,KAAKF,KAAL,CAAWG,MAA3B;AACA,YAAMC,UAAU,GAAC;AAACF,QAAAA,SAAD;AAAYL,QAAAA;AAAZ,OAAjB;;AACA,UAAG;AACC,cAAMQ,MAAM,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,2CAAX,EAAwDF,UAAxD,CAArB;;AACA,YAAGC,MAAM,CAACE,IAAP,CAAYC,QAAf,EAAwB;AACpB,eAAKC,QAAL,CAAc;AACVD,YAAAA,QAAQ,EAAEH,MAAM,CAACE,IAAP,CAAYC;AADZ,WAAd;AAGH;;AACDE,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,OARD,CAQC,OAAMO,GAAN,EAAU;AACPF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AACJ,KAvBiB;;AAAA,SAwBlBC,cAxBkB,GAwBD,YAAS;AACtB,YAAMT,UAAU,GAAE;AACdP,QAAAA,OADc;AAEdiB,QAAAA,OAAO,EAAE,KAAKC,QAAL,CAAcC,KAFT;AAGdb,QAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG;AAHL,OAAlB;;AAKA,UAAG;AACC,cAAMb,KAAK,CAACgB,IAAN,CAAW,sCAAX,EAAmDF,UAAnD,EACLa,IADK,CACCC,UAAD,IAAc;AAChB,cAAGA,UAAU,CAACX,IAAX,CAAgBY,OAAnB,EAA2B;AACvBC,YAAAA,KAAK,CAAC,SAAD,CAAL;AACA,iBAAKnB,YAAL;AACH,WAHD,MAGK;AACDmB,YAAAA,KAAK,CAAC,SAAD,CAAL;AACH;;AACD,eAAKL,QAAL,CAAcC,KAAd,GAAoB,EAApB;AACA,eAAKD,QAAL,CAAcM,KAAd;AACH,SAVK,CAAN;AAWH,OAZD,CAYC,OAAMT,GAAN,EAAU;AACPF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AACJ,KA7CiB;;AAEd,SAAKU,KAAL,GAAW;AACPd,MAAAA,QAAQ,EAAE;AADH,KAAX;AAGH;;AACDe,EAAAA,iBAAiB,GAAE;AACf,SAAKtB,YAAL;AACH;;AAsCDuB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAsB,MAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEC,GAAG,IAAE,KAAKV,QAAL,GAAcU,GAArC;AAA0C,oBAAW,OAArD;AAA6D,0BAAiB,sBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKZ,cAAtB;AAAsC,MAAA,IAAI,EAAC,IAA3C;AAAgD,MAAA,OAAO,EAAC,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFJ,CADJ,EAKQ,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWd,QAAjC;AAA2C,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWG,MAA9D;AAAsE,MAAA,YAAY,EAAE,KAAKF,YAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR,CADJ;AASH;;AAzD4B;;AA4DjC,eAAeH,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport CommentItem from './commentItem';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass Comments extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            comments: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowComments();\r\n    }\r\n    ShowComments=async()=>{\r\n        const commentId=this.props.postId;\r\n        const send_param={commentId, headers};\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/comment/allcomments', send_param);\r\n            if(result.data.comments){\r\n                this.setState({\r\n                    comments: result.data.comments\r\n                });\r\n            }\r\n            console.log(result);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    comment_insert = async()=>{\r\n        const send_param ={\r\n            headers,\r\n            comment: this.commentE.value,\r\n            postId: this.props.postId\r\n        }\r\n        try{\r\n            await axios.post('http://localhost:9090/comment/insert', send_param)\r\n            .then((returnData)=>{\r\n                if(returnData.data.message){\r\n                    alert(\"댓글 등록완료\");\r\n                    this.ShowComments();\r\n                }else{\r\n                    alert(\"댓글 등록실패\");\r\n                }\r\n                this.commentE.value=\"\";\r\n                this.commentE.focus();\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }     \r\n    render(){\r\n        return(\r\n            <div>\r\n                <InputGroup size=\"sm\" className=\"mb-3\">\r\n                    <FormControl ref={ref=>this.commentE=ref} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                    <Button onClick={this.comment_insert} size=\"sm\" variant=\"outline-dark\">댓글 등록</Button>\r\n                </InputGroup>\r\n                    <CommentItem entries={this.state.comments} postId={this.props.postId} ShowComments={this.ShowComments}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}