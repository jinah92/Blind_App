{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\showpost.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport PostItems from './postItems';\nimport { Button, Form } from 'react-bootstrap';\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass ShowPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowPosts = async () => {\n      try {\n        const result = await axios.post('http://localhost:9090/post/allpost', headers);\n\n        if (result.data.posts) {\n          this.setState({\n            posts: result.data.posts\n          });\n        }\n\n        console.log(result);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.upload_post = async () => {\n      const send_param = {\n        headers,\n        content: this.postContent.value,\n        memberId: $.cookie(\"login_id\")\n      };\n\n      try {\n        await axios.post('http://localhost:9090/post/upload', send_param).then(returnData => {\n          if (returnData.data.message) {\n            alert(\"게시물 등록 성공\");\n          } else {\n            alert(\"게시물 등록 실패\");\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    this.ShowPosts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\uC5EC\\uB7EC\\uBD84\\uC758 \\uC18C\\uC2DD\\uC744 \\uB4E4\\uB824\\uC8FC\\uC138\\uC694\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      placeholder: \"\\uC785\\uB825\\uD558\\uC138\\uC694\",\n      ref: ref => this.postContent = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.upload_post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\uAE00 \\uB4F1\\uB85D\"))), React.createElement(\"div\", {\n      id: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(PostItems, {\n      entries: this.state.posts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ShowPost;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/showpost.jsx"],"names":["React","Component","axios","$","PostItems","Button","Form","defaults","withCredentials","headers","ShowPost","constructor","props","ShowPosts","result","post","data","posts","setState","console","log","err","upload_post","send_param","content","postContent","value","memberId","cookie","then","returnData","message","alert","state","componentDidMount","render","ref"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport $ from 'jquery';\r\nimport PostItems from './postItems';\r\nimport {Button, Form} from 'react-bootstrap';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass ShowPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            posts: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowPosts();\r\n    }\r\n    ShowPosts=async ()=>{\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/post/allpost', headers);\r\n            if(result.data.posts){\r\n                this.setState({\r\n                    posts: result.data.posts\r\n                });\r\n            }\r\n            console.log(result);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    upload_post = async()=>{\r\n        const send_param ={\r\n            headers,\r\n            content: this.postContent.value,\r\n            memberId: $.cookie(\"login_id\"),\r\n        }\r\n        try{\r\n            await axios.post('http://localhost:9090/post/upload', send_param)\r\n            .then((returnData)=>{\r\n                if(returnData.data.message){\r\n                    alert(\"게시물 등록 성공\");\r\n                }else{\r\n                    alert(\"게시물 등록 실패\");\r\n                }\r\n            });\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }     \r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <div className=\"comment_form\">\r\n                        <h2>여러분의 소식을 들려주세요</h2>\r\n                        <Form>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"입력하세요\" ref={ref=>this.postContent=ref}/>\r\n                            </Form.Group>\r\n                        <Button onClick={this.upload_post}>글 등록</Button>\r\n                        </Form>\r\n                    </div>\r\n                    <div id=\"post\"></div>\r\n                </div>\r\n                <PostItems entries={this.state.posts}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowPost;"]},"metadata":{},"sourceType":"module"}