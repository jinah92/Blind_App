{"ast":null,"code":"/*!\r\n * jQuery Cookie Plugin v1.4.1\r\n * https://github.com/carhartl/jquery-cookie\r\n *\r\n * Copyright 2013 Klaus Hartl\r\n * Released under the MIT license\r\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    factory(require('jquery'));\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  var pluses = /\\+/g;\n\n  function encode(s) {\n    return config.raw ? s : encodeURIComponent(s);\n  }\n\n  function decode(s) {\n    return config.raw ? s : decodeURIComponent(s);\n  }\n\n  function stringifyCookieValue(value) {\n    return encode(config.json ? JSON.stringify(value) : String(value));\n  }\n\n  function parseCookieValue(s) {\n    if (s.indexOf('\"') === 0) {\n      // This is a quoted cookie as according to RFC2068, unescape...\n      s = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n    }\n\n    try {\n      // Replace server-side written pluses with spaces.\n      // If we can't decode the cookie, ignore it, it's unusable.\n      // If we can't parse the cookie, ignore it, it's unusable.\n      s = decodeURIComponent(s.replace(pluses, ' '));\n      return config.json ? JSON.parse(s) : s;\n    } catch (e) {}\n  }\n\n  function read(s, converter) {\n    var value = config.raw ? s : parseCookieValue(s);\n    return $.isFunction(converter) ? converter(value) : value;\n  }\n\n  var config = $.cookie = function (key, value, options) {\n    // Write\n    if (value !== undefined && !$.isFunction(value)) {\n      options = $.extend({}, config.defaults, options);\n\n      if (typeof options.expires === 'number') {\n        var days = options.expires,\n            t = options.expires = new Date();\n        t.setTime(+t + days * 864e+5);\n      }\n\n      return document.cookie = [encode(key), '=', stringifyCookieValue(value), options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n      options.path ? '; path=' + options.path : '', options.domain ? '; domain=' + options.domain : '', options.secure ? '; secure' : ''].join('');\n    } // Read\n\n\n    var result = key ? undefined : {}; // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all. Also prevents odd result when\n    // calling $.cookie().\n\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n\n    for (var i = 0, l = cookies.length; i < l; i++) {\n      var parts = cookies[i].split('=');\n      var name = decode(parts.shift());\n      var cookie = parts.join('=');\n\n      if (key && key === name) {\n        // If second argument (value) is a function it's a converter...\n        result = read(cookie, value);\n        break;\n      } // Prevent storing a cookie that we couldn't decode.\n\n\n      if (!key && (cookie = read(cookie)) !== undefined) {\n        result[name] = cookie;\n      }\n    }\n\n    return result;\n  };\n\n  config.defaults = {};\n\n  $.removeCookie = function (key, options) {\n    if ($.cookie(key) === undefined) {\n      return false;\n    } // Must not alter options, thus extending a fresh object...\n\n\n    $.cookie(key, '', $.extend({}, options, {\n      expires: -1\n    }));\n    return !$.cookie(key);\n  };\n});","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/node_modules/jquery.cookie/jquery.cookie.js"],"names":["factory","define","amd","exports","require","jQuery","$","pluses","encode","s","config","raw","encodeURIComponent","decode","decodeURIComponent","stringifyCookieValue","value","json","JSON","stringify","String","parseCookieValue","indexOf","slice","replace","parse","e","read","converter","isFunction","cookie","key","options","undefined","extend","defaults","expires","days","t","Date","setTime","document","toUTCString","path","domain","secure","join","result","cookies","split","i","l","length","parts","name","shift","removeCookie"],"mappings":"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","sourcesContent":["/*!\r\n * jQuery Cookie Plugin v1.4.1\r\n * https://github.com/carhartl/jquery-cookie\r\n *\r\n * Copyright 2013 Klaus Hartl\r\n * Released under the MIT license\r\n */\r\n(function (factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD\r\n\t\tdefine(['jquery'], factory);\r\n\t} else if (typeof exports === 'object') {\r\n\t\t// CommonJS\r\n\t\tfactory(require('jquery'));\r\n\t} else {\r\n\t\t// Browser globals\r\n\t\tfactory(jQuery);\r\n\t}\r\n}(function ($) {\r\n\r\n\tvar pluses = /\\+/g;\r\n\r\n\tfunction encode(s) {\r\n\t\treturn config.raw ? s : encodeURIComponent(s);\r\n\t}\r\n\r\n\tfunction decode(s) {\r\n\t\treturn config.raw ? s : decodeURIComponent(s);\r\n\t}\r\n\r\n\tfunction stringifyCookieValue(value) {\r\n\t\treturn encode(config.json ? JSON.stringify(value) : String(value));\r\n\t}\r\n\r\n\tfunction parseCookieValue(s) {\r\n\t\tif (s.indexOf('\"') === 0) {\r\n\t\t\t// This is a quoted cookie as according to RFC2068, unescape...\r\n\t\t\ts = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// Replace server-side written pluses with spaces.\r\n\t\t\t// If we can't decode the cookie, ignore it, it's unusable.\r\n\t\t\t// If we can't parse the cookie, ignore it, it's unusable.\r\n\t\t\ts = decodeURIComponent(s.replace(pluses, ' '));\r\n\t\t\treturn config.json ? JSON.parse(s) : s;\r\n\t\t} catch(e) {}\r\n\t}\r\n\r\n\tfunction read(s, converter) {\r\n\t\tvar value = config.raw ? s : parseCookieValue(s);\r\n\t\treturn $.isFunction(converter) ? converter(value) : value;\r\n\t}\r\n\r\n\tvar config = $.cookie = function (key, value, options) {\r\n\r\n\t\t// Write\r\n\r\n\t\tif (value !== undefined && !$.isFunction(value)) {\r\n\t\t\toptions = $.extend({}, config.defaults, options);\r\n\r\n\t\t\tif (typeof options.expires === 'number') {\r\n\t\t\t\tvar days = options.expires, t = options.expires = new Date();\r\n\t\t\t\tt.setTime(+t + days * 864e+5);\r\n\t\t\t}\r\n\r\n\t\t\treturn (document.cookie = [\r\n\t\t\t\tencode(key), '=', stringifyCookieValue(value),\r\n\t\t\t\toptions.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\r\n\t\t\t\toptions.path    ? '; path=' + options.path : '',\r\n\t\t\t\toptions.domain  ? '; domain=' + options.domain : '',\r\n\t\t\t\toptions.secure  ? '; secure' : ''\r\n\t\t\t].join(''));\r\n\t\t}\r\n\r\n\t\t// Read\r\n\r\n\t\tvar result = key ? undefined : {};\r\n\r\n\t\t// To prevent the for loop in the first place assign an empty array\r\n\t\t// in case there are no cookies at all. Also prevents odd result when\r\n\t\t// calling $.cookie().\r\n\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\r\n\r\n\t\tfor (var i = 0, l = cookies.length; i < l; i++) {\r\n\t\t\tvar parts = cookies[i].split('=');\r\n\t\t\tvar name = decode(parts.shift());\r\n\t\t\tvar cookie = parts.join('=');\r\n\r\n\t\t\tif (key && key === name) {\r\n\t\t\t\t// If second argument (value) is a function it's a converter...\r\n\t\t\t\tresult = read(cookie, value);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Prevent storing a cookie that we couldn't decode.\r\n\t\t\tif (!key && (cookie = read(cookie)) !== undefined) {\r\n\t\t\t\tresult[name] = cookie;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconfig.defaults = {};\r\n\r\n\t$.removeCookie = function (key, options) {\r\n\t\tif ($.cookie(key) === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Must not alter options, thus extending a fresh object...\r\n\t\t$.cookie(key, '', $.extend({}, options, { expires: -1 }));\r\n\t\treturn !$.cookie(key);\r\n\t};\r\n\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}