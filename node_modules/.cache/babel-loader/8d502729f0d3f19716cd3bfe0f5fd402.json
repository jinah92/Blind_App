{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\message\\\\sendmessage.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Badge, Form } from \"react-bootstrap\";\nimport axios, { post } from \"axios\";\nimport $ from \"jquery\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  hidden: {\n    display: \"none\"\n  }\n});\n\nclass SendMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleValueChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n\n    this.sendMessage = async () => {\n      const sendee_id = this.props.userId;\n      const sender_id = $.cookie(\"login_id\");\n      const sender_nick = $.cookie(\"login_nick\");\n      const message = this.text.value;\n      console.log(message);\n      const send_param = {\n        sendee_id,\n        sender_id,\n        sender_nick,\n        message\n      };\n\n      try {\n        const result = await axios.post(\"http://localhost:9090/message/send\", send_param);\n\n        if (result.data.message) {\n          alert(\"쪽지보내기 성공\");\n          this.handleClose();\n        } else {\n          alert(\"쪽지보내기 실패\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        file: null,\n        message: \"\",\n        birthday: \"\",\n        gender: \"\",\n        job: \"\",\n        fileName: \"\",\n        open: false\n      });\n    };\n\n    this.ShowMessage = () => {\n      let nick = this.props.user;\n\n      if ($.cookie(\"login_nick\") === nick) {\n        this.setState({\n          show: \"hidden\"\n        });\n      } else {\n        this.setState({\n          show: \"visible\"\n        });\n      }\n    };\n\n    this.state = {\n      file: null,\n      message: \"\",\n      birthday: \"\",\n      gender: \"\",\n      job: \"\",\n      fileName: \"\",\n      open: false,\n      show: \"visible\"\n    };\n    /* this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n        this.handleFileChange = this.handleFileChange.bind(this)\r\n        this.handleValueChange = this.handleValueChange.bind(this)\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n        this.handleClickOpen = this.handleClickOpen.bind(this)\r\n        this.handleClose = this.handleClose.bind(this); */\n  }\n\n  componentDidMount() {\n    this.ShowMessage();\n  }\n\n  render() {\n    const div_style = {\n      visibility: this.state.show,\n      float: \"right\"\n    };\n    return React.createElement(\"div\", {\n      style: div_style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      variant: \"info\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\uCABD\\uC9C0\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\uCABD\\uC9C0 \\uBCF4\\uB0B4\\uAE30\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      label: \"\\uBCF4\\uB0B4\\uC2E4 \\uB0B4\\uC6A9\",\n      as: \"textarea\",\n      rows: \"10\",\n      cols: \"50\",\n      ref: ref => this.text = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"dark\",\n      size: \"sm\",\n      onClick: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\uBCF4\\uB0B4\\uAE30\"), React.createElement(Button, {\n      variant: \"dark\",\n      size: \"sm\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"\\uB2EB\\uAE30\"))));\n  }\n\n}\n\nexport default withStyles(styles)(SendMessage);","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/message/sendmessage.jsx"],"names":["React","Component","Button","Badge","Form","axios","post","$","Dialog","DialogActions","DialogContent","DialogTitle","TextField","withStyles","styles","theme","hidden","display","SendMessage","constructor","props","handleValueChange","e","nextState","target","name","value","setState","sendMessage","sendee_id","userId","sender_id","cookie","sender_nick","message","text","console","log","send_param","result","data","alert","handleClose","err","handleClickOpen","open","file","birthday","gender","job","fileName","ShowMessage","nick","user","show","state","componentDidMount","render","div_style","visibility","float","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Badge, Form } from \"react-bootstrap\";\r\nimport axios, { post } from \"axios\";\r\nimport $ from \"jquery\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  hidden: {\r\n    display: \"none\"\r\n  }\r\n});\r\n\r\nclass SendMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: null,\r\n      message: \"\",\r\n      birthday: \"\",\r\n      gender: \"\",\r\n      job: \"\",\r\n      fileName: \"\",\r\n      open: false,\r\n      show: \"visible\"\r\n    };\r\n    /* this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n        this.handleFileChange = this.handleFileChange.bind(this)\r\n        this.handleValueChange = this.handleValueChange.bind(this)\r\n        this.addCustomer = this.addCustomer.bind(this)\r\n        this.handleClickOpen = this.handleClickOpen.bind(this)\r\n        this.handleClose = this.handleClose.bind(this); */\r\n  }\r\n  handleValueChange = e => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n  sendMessage = async () => {\r\n    const sendee_id = this.props.userId;\r\n    const sender_id = $.cookie(\"login_id\");\r\n    const sender_nick = $.cookie(\"login_nick\");\r\n    const message = this.text.value;\r\n    console.log(message);\r\n    const send_param = { sendee_id, sender_id, sender_nick, message };\r\n    try {\r\n      const result = await axios.post(\"http://localhost:9090/message/send\", send_param);\r\n      if (result.data.message) {\r\n        alert(\"쪽지보내기 성공\");\r\n        this.handleClose();\r\n      } else {\r\n        alert(\"쪽지보내기 실패\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({\r\n      file: null,\r\n      message: \"\",\r\n      birthday: \"\",\r\n      gender: \"\",\r\n      job: \"\",\r\n      fileName: \"\",\r\n      open: false\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.ShowMessage();\r\n  }\r\n  ShowMessage = () => {\r\n    let nick = this.props.user;\r\n    if ($.cookie(\"login_nick\") === nick) {\r\n      this.setState({ show: \"hidden\" });\r\n    } else {\r\n      this.setState({ show: \"visible\" });\r\n    }\r\n  };\r\n  render() {\r\n    const div_style = {\r\n      visibility: this.state.show,\r\n      float: \"right\"\r\n    };\r\n    return (\r\n      <div style={div_style}>\r\n        <Badge variant=\"info\" onClick={this.handleClickOpen}>\r\n          쪽지\r\n        </Badge>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>쪽지 보내기</DialogTitle>\r\n          <DialogContent>\r\n            <Form.Control\r\n              label=\"보내실 내용\"\r\n              as=\"textarea\"\r\n              rows=\"10\"\r\n              cols=\"50\"\r\n              ref={ref => (this.text = ref)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={this.sendMessage}>\r\n              보내기\r\n            </Button>\r\n            <Button variant=\"dark\" size=\"sm\" onClick={this.handleClose}>\r\n              닫기\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SendMessage);\r\n"]},"metadata":{},"sourceType":"module"}