{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\user\\\\myinfo.jsx\";\nimport React, { Component } from \"react\";\nimport { NavLink, Route, HashRouter } from \"react-dom\";\nimport { ListGroup, Col, Button, Form, ButtonToolbar, Badge } from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass MyInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteMember = () => {\n      const user_id = $.cookie(\"login_id\");\n      const send_param = {\n        user_id\n      };\n      const check = window.confirm(\"계정을 삭제하시겠습니까?\");\n\n      if (check) {\n        $.post(\"http://localhost:9090/member/delete\", send_param, returnData => {\n          if (returnData.message) {\n            alert(\"계정삭제 완료\");\n            $.removeCookie(\"login_nick\");\n            $.removeCookie(\"login_id\");\n          } else {\n            alert(\"계정삭제 오류\");\n          }\n        });\n      }\n    };\n\n    this.user_update = async () => {\n      const user_id = $.cookie(\"login_id\");\n      const new_pw = this.new_pwdE.value;\n      const new_nick = this.new_nickE.value;\n      const new_company = this.new_companyE.value;\n      console.log(user_id);\n      const send_param = {\n        user_id,\n        new_pw,\n        new_nick,\n        new_company,\n        headers\n      };\n\n      try {\n        const result = await axios.post(\"http://localhost:9090/member/update\", send_param);\n\n        if (result.data.result) {\n          alert(\"회원정보 수정 성공\");\n          $.cookie(\"login_nick\", result.data.result.nickname);\n          this.setState({\n            mainStyle: \"visible\",\n            registerStyle: \"hidden\"\n          });\n        }\n\n        console.log(result.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.user_default = () => {\n      this.setState({\n        mainStyle: \"visible\",\n        registerStyle: \"hidden\"\n      });\n    };\n\n    this.updateMember = async () => {\n      this.setState({\n        mainStyle: \"hidden\",\n        registerStyle: \"visible\"\n      });\n    };\n\n    this.cnt_post = async () => {\n      const user_id = $.cookie(\"login_id\");\n      const send_param = {\n        user_id,\n        headers\n      };\n\n      try {\n        const result = await axios.post(\"http://localhost:9090/member/postCount\", send_param);\n        console.log(result.data.counts);\n        this.setState({\n          postCount: result.data.counts\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.state = {\n      mainStyle: \"visible\",\n      registerStyle: \"hidden\",\n      postCount: 0\n    };\n  }\n\n  componentDidMount() {\n    this.cnt_post();\n  }\n\n  render() {\n    const div_style = {\n      margin: 50\n    };\n    const mainStyle = {\n      visibility: this.state.mainStyle\n    };\n    const registerStyle = {\n      visibility: this.state.registerStyle,\n      width: \"30%\",\n      position: \"fixed\",\n      top: 100,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      margin: \"auto\",\n      textAlign: \"center\"\n    };\n    return React.createElement(\"div\", {\n      style: div_style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: {\n        span: 6,\n        offset: 3\n      },\n      style: mainStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\\uB098\\uC758 \\uAC8C\\uC2DC\\uAE00 \", React.createElement(Badge, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.postCount), \" \"), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"\\uAD00\\uC2EC \\uAC8C\\uC2DC\\uAE00\"), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\uAD00\\uC2EC \\uD1A0\\uD53D\"), React.createElement(ListGroup.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      onClick: this.updateMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uC815\\uBCF4 \\uC218\\uC815\"), React.createElement(Button, {\n      variant: \"danger\",\n      onClick: this.deleteMember,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0 \\uD0C8\\uD1F4\")))), React.createElement(\"div\", {\n      style: registerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\uD68C\\uC6D0\\uC815\\uBCF4 \\uC218\\uC815\"), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"\\uC774\\uBA54\\uC77C\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      ref: ref => this.new_pwdE = ref,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"\\uB2C9\\uB124\\uC784\",\n      ref: ref => this.new_nickE = ref,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"\\uD68C\\uC0AC\\uC758 \\uC0B0\\uC5C5\\uBD84\\uC57C\"), React.createElement(\"option\", {\n      value: \"agriculture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"\\uB18D\\uC5C5, \\uC784\\uC5C5 \\uBC0F \\uC5B4\\uC5C5\"), React.createElement(\"option\", {\n      value: \"mining\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"\\uAD11\\uC5C5\"), React.createElement(\"option\", {\n      value: \"manufacturing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\\uC81C\\uC870\\uC5C5\"), React.createElement(\"option\", {\n      value: \"electronic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"\\uC804\\uAE30 \\uACF5\\uAE09\\uC5C5\"), React.createElement(\"option\", {\n      value: \"water\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"\\uC218\\uB3C4, \\uD558\\uC218 \\uBC0F \\uD3D0\\uAE30\\uBB3C \\uCC98\\uB9AC\"))), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"\\uD68C\\uC0AC\\uBA85\",\n      ref: ref => this.new_companyE = ref,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: this.user_update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uD558\\uAE30\"), React.createElement(Button, {\n      variant: \"warning\",\n      type: \"submit\",\n      onClick: this.user_default,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"\\uB3CC\\uC544\\uAC00\\uAE30\"))));\n  }\n\n}\n\nexport default MyInfo;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/user/myinfo.jsx"],"names":["React","Component","NavLink","Route","HashRouter","ListGroup","Col","Button","Form","ButtonToolbar","Badge","$","axios","defaults","withCredentials","headers","MyInfo","constructor","props","deleteMember","user_id","cookie","send_param","check","window","confirm","post","returnData","message","alert","removeCookie","user_update","new_pw","new_pwdE","value","new_nick","new_nickE","new_company","new_companyE","console","log","result","data","nickname","setState","mainStyle","registerStyle","err","user_default","updateMember","cnt_post","counts","postCount","state","componentDidMount","render","div_style","margin","visibility","width","position","top","right","bottom","left","textAlign","span","offset","ref","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink, Route, HashRouter } from \"react-dom\";\r\nimport { ListGroup, Col, Button, Form, ButtonToolbar, Badge } from \"react-bootstrap\";\r\nimport $ from \"jquery\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass MyInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainStyle: \"visible\",\r\n      registerStyle: \"hidden\",\r\n      postCount: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.cnt_post();\r\n  }\r\n  deleteMember = () => {\r\n    const user_id = $.cookie(\"login_id\");\r\n    const send_param = { user_id };\r\n    const check = window.confirm(\"계정을 삭제하시겠습니까?\");\r\n    if (check) {\r\n      $.post(\"http://localhost:9090/member/delete\", send_param, returnData => {\r\n        if (returnData.message) {\r\n          alert(\"계정삭제 완료\");\r\n          $.removeCookie(\"login_nick\");\r\n          $.removeCookie(\"login_id\");\r\n        } else {\r\n          alert(\"계정삭제 오류\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n  user_update = async () => {\r\n    const user_id = $.cookie(\"login_id\");\r\n    const new_pw = this.new_pwdE.value;\r\n    const new_nick = this.new_nickE.value;\r\n    const new_company = this.new_companyE.value;\r\n    console.log(user_id);\r\n    const send_param = { user_id, new_pw, new_nick, new_company, headers };\r\n    try {\r\n      const result = await axios.post(\"http://localhost:9090/member/update\", send_param);\r\n      if (result.data.result) {\r\n        alert(\"회원정보 수정 성공\");\r\n        $.cookie(\"login_nick\", result.data.result.nickname);\r\n        this.setState({\r\n          mainStyle: \"visible\",\r\n          registerStyle: \"hidden\"\r\n        });\r\n      }\r\n      console.log(result.data);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  user_default = () => {\r\n    this.setState({\r\n      mainStyle: \"visible\",\r\n      registerStyle: \"hidden\"\r\n    });\r\n  };\r\n  updateMember = async () => {\r\n    this.setState({\r\n      mainStyle: \"hidden\",\r\n      registerStyle: \"visible\"\r\n    });\r\n  };\r\n  cnt_post = async () => {\r\n    const user_id = $.cookie(\"login_id\");\r\n    const send_param = { user_id, headers };\r\n    try {\r\n      const result = await axios.post(\"http://localhost:9090/member/postCount\", send_param);\r\n      console.log(result.data.counts);\r\n      this.setState({\r\n        postCount: result.data.counts\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  render() {\r\n    const div_style = {\r\n      margin: 50\r\n    };\r\n    const mainStyle = {\r\n      visibility: this.state.mainStyle\r\n    };\r\n    const registerStyle = {\r\n      visibility: this.state.registerStyle,\r\n      width: \"30%\",\r\n      position: \"fixed\",\r\n      top: 100,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      margin: \"auto\",\r\n      textAlign: \"center\"\r\n    };\r\n\r\n    return (\r\n      <div style={div_style}>\r\n        <Col md={{ span: 6, offset: 3 }} style={mainStyle}>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              나의 게시글 <Badge variant=\"info\">{this.state.postCount}</Badge>{\" \"}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>관심 게시글</ListGroup.Item>\r\n            <ListGroup.Item>관심 토픽</ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button variant=\"warning\" onClick={this.updateMember}>\r\n                회원정보 수정\r\n              </Button>\r\n              <Button variant=\"danger\" onClick={this.deleteMember}>\r\n                회원 탈퇴\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <div style={registerStyle}>\r\n          <h2>회원정보 수정</h2>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Control type=\"email\" placeholder=\"이메일\" disabled>\r\n              {}\r\n            </Form.Control>\r\n            <br />\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                ref={ref => (this.new_pwdE = ref)}\r\n                required\r\n              />\r\n              <br />\r\n            </Form.Group>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"닉네임\"\r\n              ref={ref => (this.new_nickE = ref)}\r\n              required\r\n            />\r\n            <br />\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Control as=\"select\" value={this.state.value} onChange={this.handleChange}>\r\n                <option>회사의 산업분야</option>\r\n                <option value=\"agriculture\">농업, 임업 및 어업</option>\r\n                <option value=\"mining\">광업</option>\r\n                <option value=\"manufacturing\">제조업</option>\r\n                <option value=\"electronic\">전기 공급업</option>\r\n                <option value=\"water\">수도, 하수 및 폐기물 처리</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"회사명\"\r\n              ref={ref => (this.new_companyE = ref)}\r\n              required\r\n            />\r\n            <br />\r\n          </Form.Group>\r\n          <ButtonToolbar>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={this.user_update}>\r\n              수정하기\r\n            </Button>\r\n            <Button variant=\"warning\" type=\"submit\" onClick={this.user_default}>\r\n              돌아가기\r\n            </Button>\r\n          </ButtonToolbar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyInfo;\r\n"]},"metadata":{},"sourceType":"module"}