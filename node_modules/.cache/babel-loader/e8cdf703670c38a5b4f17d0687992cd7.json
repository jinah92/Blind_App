{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\mypost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport MyPostItems from './mypostItems';\nimport { Col } from 'react-bootstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass MyPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowPosts = async () => {\n      const user_id = $.cookie(\"login_id\");\n      console.log(user_id);\n      const send_param = {\n        user_id,\n        headers\n      };\n\n      try {\n        const result = await axios.post('http://localhost:9090/post/allpost_mine', send_param);\n\n        if (result.data.myposts) {\n          this.setState({\n            myposts: result.data.myposts\n          });\n        }\n\n        console.log(result.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.update_post = post_id => {\n      const user_id = $.cookie(\"login_id\");\n      const send_param = {\n        post_id,\n        user_id\n      };\n      console.log(send_param);\n      $.post('http://localhost:9090/post/update', send_param, returnData => {\n        if (returnData.result) {\n          alert(\"Post 수정완료\");\n        } else {\n          alert(\"수정 오류\");\n        }\n      });\n    };\n\n    this.delete_post = post_id => {\n      const user_id = $.cookie(\"login_id\");\n      const send_param = {\n        post_id,\n        user_id\n      };\n      console.log(send_param);\n      $.post('http://localhost:9090/post/delete', send_param, returnData => {\n        if (returnData.result) {\n          alert(\"Post 삭제완료\");\n          const filteredItems = this.state.myposts.filter(item => {\n            return item.key !== post_id;\n          });\n          this.setState({\n            myposts: filteredItems\n          });\n        } else {\n          alert(\"삭제 오류\");\n        }\n      });\n    };\n\n    this.checkMyPost = () => {\n      let result;\n\n      if (!this.state.myposts) {\n        result = '등록된 게시글이 없습니다.';\n      } else {\n        result = this.state.myposts.map(post => {\n          return React.createElement(MyPostItems, {\n            key: post.id,\n            id: post.id,\n            nickname: post.member.nickname,\n            createDate: post.createdAt,\n            UpdateDate: post.updatedAt,\n            content: post.content,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          });\n        });\n      }\n    };\n\n    this.state = {\n      myposts: []\n    };\n  }\n\n  componentDidMount() {\n    this.ShowPosts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"\\uAC8C\\uC2DC\\uBC88\\uD638\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC790\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\uC0DD\\uC131\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.checkMyPost.result)));\n  }\n\n}\n\nexport default MyPost;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/mypost.jsx"],"names":["React","Component","axios","$","MyPostItems","Col","Table","TableBody","TableHead","TableRow","TableCell","defaults","withCredentials","headers","MyPost","constructor","props","ShowPosts","user_id","cookie","console","log","send_param","result","post","data","myposts","setState","err","update_post","post_id","returnData","alert","delete_post","filteredItems","state","filter","item","key","checkMyPost","map","id","member","nickname","createdAt","updatedAt","content","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport MyPostItems from './mypostItems';\r\nimport {Col} from 'react-bootstrap';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            myposts: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowPosts();\r\n    }\r\n    ShowPosts=async ()=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        console.log(user_id);\r\n        const send_param={user_id, headers};\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/post/allpost_mine', send_param);\r\n            if(result.data.myposts){\r\n                this.setState({\r\n                    myposts: result.data.myposts\r\n                });\r\n            }\r\n            console.log(result.data);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    update_post=(post_id)=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        const send_param={post_id, user_id};\r\n        console.log(send_param);\r\n        $.post('http://localhost:9090/post/update', send_param, (returnData)=>{\r\n            if(returnData.result){\r\n                alert(\"Post 수정완료\");\r\n            }else{\r\n                alert(\"수정 오류\");\r\n            }\r\n        });\r\n    }\r\n    delete_post=(post_id)=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        const send_param={post_id, user_id};\r\n        console.log(send_param);\r\n        $.post('http://localhost:9090/post/delete', send_param, (returnData)=>{\r\n            if(returnData.result){\r\n                alert(\"Post 삭제완료\");\r\n                const filteredItems = this.state.myposts.filter((item)=>{\r\n                    return item.key !== post_id\r\n                });\r\n                this.setState({\r\n                    myposts: filteredItems\r\n                });\r\n            }else{\r\n                alert(\"삭제 오류\");\r\n            }\r\n        });\r\n    }\r\n    checkMyPost=()=>{\r\n        let result;\r\n        if(!this.state.myposts){\r\n            result = '등록된 게시글이 없습니다.';\r\n        }else{\r\n            result = this.state.myposts.map((post) => {\r\n                return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                });\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Table>\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell>게시번호</TableCell>\r\n                <TableCell>작성자</TableCell>\r\n                <TableCell>생성일</TableCell>\r\n                <TableCell>수정일</TableCell>\r\n                <TableCell>내용</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {/* {this.state.myposts.map((post) => {\r\n                    return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                    })} */}\r\n                    {this.checkMyPost.result}\r\n                </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPost;"]},"metadata":{},"sourceType":"module"}