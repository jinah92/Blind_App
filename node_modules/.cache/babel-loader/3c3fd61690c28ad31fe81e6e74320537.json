{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\mypost.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport MyPostItems from './mypostItems';\nimport { Col } from 'react-bootstrap';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass MyPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowPosts = async () => {\n      const user_id = $.cookie(\"login_id\");\n      console.log(user_id);\n      const send_param = {\n        user_id,\n        headers\n      };\n\n      try {\n        const result = await axios.post('http://localhost:9090/post/allpost_mine', send_param);\n\n        if (result.data.myposts) {\n          this.setState({\n            myposts: result.data.myposts\n          });\n        }\n\n        console.log(result.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.update_post = post_id => {\n      const user_id = $.cookie(\"login_id\");\n      const send_param = {\n        post_id,\n        user_id\n      };\n      console.log(send_param);\n      $.post('http://localhost:9090/post/update', send_param, returnData => {\n        if (returnData.result) {\n          alert(\"Post 수정완료\");\n        } else {\n          alert(\"수정 오류\");\n        }\n      });\n    };\n\n    this.delete_post = post_id => {\n      const user_id = $.cookie(\"login_id\");\n      const send_param = {\n        post_id,\n        user_id\n      };\n      console.log(send_param);\n      $.post('http://localhost:9090/post/delete', send_param, returnData => {\n        if (returnData.result) {\n          alert(\"Post 삭제완료\");\n          const filteredItems = this.state.myposts.filter(item => {\n            return item.key !== post_id;\n          });\n          this.setState({\n            myposts: filteredItems\n          });\n        } else {\n          alert(\"삭제 오류\");\n        }\n      });\n    };\n\n    this.state = {\n      myposts: []\n    };\n  }\n\n  componentDidMount() {\n    this.ShowPosts();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\uBC88\\uD638\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\uC774\\uBBF8\\uC9C0\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\uC774\\uB984\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"\\uC0DD\\uB144\\uC6D4\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\uC131\\uBCC4\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\uC9C1\\uC5C5\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.myposts.map(post => {\n      return React.createElement(MyPostItems, {\n        key: post.id,\n        id: post.id,\n        nickname: post.member.nickname,\n        createDate: post.createdAt,\n        UpdateDate: post.updatedAt,\n        content: post.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\n{\n  /* <MyPostItems entries={this.state.myposts} superDelete={this.delete_post} superUpdate={this.update_post}/> */\n}\nexport default MyPost;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/mypost.jsx"],"names":["React","Component","axios","$","MyPostItems","Col","Table","TableBody","TableHead","TableRow","TableCell","defaults","withCredentials","headers","MyPost","constructor","props","ShowPosts","user_id","cookie","console","log","send_param","result","post","data","myposts","setState","err","update_post","post_id","returnData","alert","delete_post","filteredItems","state","filter","item","key","componentDidMount","render","map","id","member","nickname","createdAt","updatedAt","content"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport MyPostItems from './mypostItems';\r\nimport {Col} from 'react-bootstrap';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            myposts: []\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowPosts();\r\n    }\r\n    ShowPosts=async ()=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        console.log(user_id);\r\n        const send_param={user_id, headers};\r\n        try{\r\n            const result = await axios.post('http://localhost:9090/post/allpost_mine', send_param);\r\n            if(result.data.myposts){\r\n                this.setState({\r\n                    myposts: result.data.myposts\r\n                });\r\n            }\r\n            console.log(result.data);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n    update_post=(post_id)=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        const send_param={post_id, user_id};\r\n        console.log(send_param);\r\n        $.post('http://localhost:9090/post/update', send_param, (returnData)=>{\r\n            if(returnData.result){\r\n                alert(\"Post 수정완료\");\r\n            }else{\r\n                alert(\"수정 오류\");\r\n            }\r\n        });\r\n    }\r\n    delete_post=(post_id)=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        const send_param={post_id, user_id};\r\n        console.log(send_param);\r\n        $.post('http://localhost:9090/post/delete', send_param, (returnData)=>{\r\n            if(returnData.result){\r\n                alert(\"Post 삭제완료\");\r\n                const filteredItems = this.state.myposts.filter((item)=>{\r\n                    return item.key !== post_id\r\n                });\r\n                this.setState({\r\n                    myposts: filteredItems\r\n                });\r\n            }else{\r\n                alert(\"삭제 오류\");\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Table>\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell>번호</TableCell>\r\n                <TableCell>이미지</TableCell>\r\n                <TableCell>이름</TableCell>\r\n                <TableCell>생년월일</TableCell>\r\n                <TableCell>성별</TableCell>\r\n                <TableCell>직업</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {this.state.myposts.map((post) => {\r\n                    return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                    })}\r\n                </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <MyPostItems entries={this.state.myposts} superDelete={this.delete_post} superUpdate={this.update_post}/> */}\r\n\r\nexport default MyPost;"]},"metadata":{},"sourceType":"module"}