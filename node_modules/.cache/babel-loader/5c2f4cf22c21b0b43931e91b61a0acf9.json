{"ast":null,"code":"import _classCallCheck from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from\"axios\";import{Form,Badge,Col,Button,ButtonGroup}from'react-bootstrap';import{Timeline,TimelineEvent}from'react-event-timeline';import Moment from'react-moment';import Comments from'../comment/comments';import SendMessage from'../message/sendmessage';import Like from'../user/like';axios.defaults.withCredentials=true;var headers={withCredentials:true};var PostItems=/*#__PURE__*/function(_Component){_inherits(PostItems,_Component);function PostItems(){var _getPrototypeOf2;var _this;_classCallCheck(this,PostItems);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PostItems)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={message:\"\"};return _this;}_createClass(PostItems,[{key:\"render\",value:function render(){var _this2=this;var like_btn={float:\"right\"};var nick_style={float:\"left\"};var posts=this.props.entries.map(function(post){return React.createElement(Col,{md:{span:6,offset:3}},React.createElement(Timeline,null,React.createElement(TimelineEvent,{key:post.id},React.createElement(Form,null,React.createElement(Form.Label,{as:\"textarea\",rows:\"2\",style:nick_style},React.createElement(\"h6\",null,React.createElement(\"strong\",null,post.member.nickname),\"\\xA0\",React.createElement(SendMessage,{user:post.member.nickname,userId:post.member.id,message:_this2.state.message}))),\"\\xA0 \\xA0 \\xA0 \\xA0 \\uC0DD\\uC131\\uC77C: \",React.createElement(Moment,{format:\"YYYY-MM-DD HH:mm\"},post.createdAt),\"\\xA0 \\xA0 \\uC218\\uC815\\uC77C: \",React.createElement(Moment,{format:\"YYYY-MM-DD HH:mm\"},post.updatedAt),React.createElement(ButtonGroup,{style:like_btn},React.createElement(Like,{post:post.id,user:post.member.id,like:post.like,show:_this2.props.show})),React.createElement(\"hr\",null),React.createElement(\"h6\",null,\"  \",post.content,\" \")),React.createElement(Form,null,React.createElement(Comments,{postId:post.id})))));{}/* <div key={post.id} */ /* onClick={this.props.superDelete.bind(null, post.id)}>/*}\r\n                    {/* <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {post.content} {post.id}\r\n                            </Card.Text>\r\n                            <Card.Link href=\"#\">Card Link</Card.Link>\r\n                            <Card.Link href=\"#\">Another Link</Card.Link>\r\n                        </Card.Body>\r\n                        <Button onClick={this.props.superDelete.bind(null, post.id)}>삭제하기</Button> \r\n                        <Comments />\r\n                    </Card>\r\n                    <br />\r\n                    </div> */});/*  }); */console.log(posts);return React.createElement(\"ul\",{className:\"thePost\"},posts);}}]);return PostItems;}(Component);export default PostItems;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/post/postItems.jsx"],"names":["React","Component","axios","Form","Badge","Col","Button","ButtonGroup","Timeline","TimelineEvent","Moment","Comments","SendMessage","Like","defaults","withCredentials","headers","PostItems","state","message","like_btn","float","nick_style","posts","props","entries","map","post","span","offset","id","member","nickname","createdAt","updatedAt","like","show","content","console","log"],"mappings":"mpBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,CAAcC,KAAd,CAAqBC,GAArB,CAA0BC,MAA1B,CAAkCC,WAAlC,KAAoD,iBAApD,CACA,OAAQC,QAAR,CAAkBC,aAAlB,KAAsC,sBAAtC,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CAEAX,KAAK,CAACY,QAAN,CAAeC,eAAf,CAAiC,IAAjC,CACA,GAAMC,CAAAA,OAAO,CAAG,CAACD,eAAe,CAAE,IAAlB,CAAhB,C,GAEME,CAAAA,S,2YACFC,K,CAAM,CACFC,OAAO,CAAE,EADP,C,4EAGE,iBACJ,GAAMC,CAAAA,QAAQ,CAAC,CACXC,KAAK,CAAE,OADI,CAAf,CAGA,GAAMC,CAAAA,UAAU,CAAC,CACbD,KAAK,CAAE,MADM,CAAjB,CAGA,GAAIE,CAAAA,KAAK,CAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,SAACC,IAAD,CAAQ,CACvC,MAAO,qBAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,MAAM,CAAE,CAAnB,CAAT,EACC,oBAAC,QAAD,MACQ,oBAAC,aAAD,EAAe,GAAG,CAAEF,IAAI,CAACG,EAAzB,EACI,oBAAC,IAAD,MACI,oBAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,UAAf,CAA0B,IAAI,CAAC,GAA/B,CAAmC,KAAK,CAAER,UAA1C,EACI,8BAAI,kCAASK,IAAI,CAACI,MAAL,CAAYC,QAArB,CAAJ,QACA,oBAAC,WAAD,EAAa,IAAI,CAAEL,IAAI,CAACI,MAAL,CAAYC,QAA/B,CAAyC,MAAM,CAAEL,IAAI,CAACI,MAAL,CAAYD,EAA7D,CAAiE,OAAO,CAAE,MAAI,CAACZ,KAAL,CAAWC,OAArF,EADA,CADJ,CADJ,4CAKS,oBAAC,MAAD,EAAQ,MAAM,CAAC,kBAAf,EAAmCQ,IAAI,CAACM,SAAxC,CALT,kCAMS,oBAAC,MAAD,EAAQ,MAAM,CAAC,kBAAf,EAAmCN,IAAI,CAACO,SAAxC,CANT,CAOI,oBAAC,WAAD,EAAa,KAAK,CAAEd,QAApB,EACI,oBAAC,IAAD,EAAM,IAAI,CAAEO,IAAI,CAACG,EAAjB,CAAqB,IAAI,CAAEH,IAAI,CAACI,MAAL,CAAYD,EAAvC,CAA2C,IAAI,CAAEH,IAAI,CAACQ,IAAtD,CAA4D,IAAI,CAAE,MAAI,CAACX,KAAL,CAAWY,IAA7E,EADJ,CAPJ,CASkB,8BATlB,CAUI,mCAAOT,IAAI,CAACU,OAAZ,KAVJ,CADJ,CAaI,oBAAC,IAAD,MACI,oBAAC,QAAD,EAAU,MAAM,CAAEV,IAAI,CAACG,EAAvB,EADJ,CAbJ,CADR,CADD,CAAP,CAsBQ,CAA0B,CAAzB,wBAvB8B,CAuBJ;;;;;;;;;;;;;6BAajB,CApCV,CAAZ,CAqCD,UACCQ,OAAO,CAACC,GAAR,CAAYhB,KAAZ,EAEA,MACI,2BAAI,SAAS,CAAC,SAAd,EACKA,KADL,CADJ,CAKH,C,uBAxDmBtB,S,EA2DxB,cAAegB,CAAAA,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {Form, Badge, Col, Button, ButtonGroup} from 'react-bootstrap';\r\nimport {Timeline, TimelineEvent} from 'react-event-timeline';\r\nimport Moment from 'react-moment';\r\nimport Comments from '../comment/comments';\r\nimport SendMessage from '../message/sendmessage';\r\nimport Like from '../user/like';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass PostItems extends Component {\r\n    state={\r\n        message: \"\"\r\n    };\r\n    render(){\r\n        const like_btn={\r\n            float: \"right\"\r\n        }\r\n        const nick_style={\r\n            float: \"left\"\r\n        }\r\n        let posts = this.props.entries.map((post)=>{\r\n            return <Col md={{ span: 6, offset: 3 }}>\r\n                    <Timeline>\r\n                            <TimelineEvent key={post.id}>\r\n                                <Form>\r\n                                    <Form.Label as=\"textarea\" rows=\"2\" style={nick_style}>\r\n                                        <h6><strong>{post.member.nickname}</strong>&nbsp;\r\n                                        <SendMessage user={post.member.nickname} userId={post.member.id} message={this.state.message}/></h6>\r\n                                    </Form.Label>&nbsp; &nbsp; &nbsp; &nbsp; \r\n                                    생성일: <Moment format=\"YYYY-MM-DD HH:mm\">{post.createdAt}</Moment>&nbsp; &nbsp; \r\n                                    수정일: <Moment format=\"YYYY-MM-DD HH:mm\">{post.updatedAt}</Moment>\r\n                                    <ButtonGroup style={like_btn}>\r\n                                        <Like post={post.id} user={post.member.id} like={post.like} show={this.props.show}/>\r\n                                    </ButtonGroup><hr />\r\n                                    <h6>  {post.content} </h6>\r\n                                </Form>\r\n                                <Form>\r\n                                    <Comments postId={post.id}/>\r\n                                </Form>\r\n                            </TimelineEvent>\r\n                    </Timeline>\r\n                    </Col>\r\n            \r\n                    {/* <div key={post.id} */} /* onClick={this.props.superDelete.bind(null, post.id)}>/*}\r\n                    {/* <Card style={{ width: '18rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {post.content} {post.id}\r\n                            </Card.Text>\r\n                            <Card.Link href=\"#\">Card Link</Card.Link>\r\n                            <Card.Link href=\"#\">Another Link</Card.Link>\r\n                        </Card.Body>\r\n                        <Button onClick={this.props.superDelete.bind(null, post.id)}>삭제하기</Button> \r\n                        <Comments />\r\n                    </Card>\r\n                    <br />\r\n                    </div> */});\r\n       /*  }); */\r\n        console.log(posts);\r\n\r\n        return(\r\n            <ul className=\"thePost\">\r\n                {posts}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostItems;"]},"metadata":{},"sourceType":"module"}