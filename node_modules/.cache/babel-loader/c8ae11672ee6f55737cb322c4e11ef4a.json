{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\message\\\\message.jsx\";\nimport React, { Component } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport ReceivedMsg from \"./ReceivedMsg\";\nimport SentMsg from \"./SentMsg\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass MyMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowMessages = async () => {\n      const user_id = $.cookie(\"login_id\");\n      console.log(user_id);\n      const send_param = {\n        user_id,\n        headers\n      };\n\n      if (user_id) {\n        try {\n          const result = await axios.post(\"http://localhost:9090/message/allmessages\", send_param);\n\n          if (result.data.received_msg) {\n            this.setState({\n              received_msg: result.data.received_msg\n            });\n          }\n\n          if (result.data.sent_msg) {\n            this.setState({\n              sent_msg: result.data.sent_msg\n            });\n          }\n\n          console.log(result.data);\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        alert(\"로그인이 필요합니다.\");\n      }\n    };\n\n    this.state = {\n      sent_msg: [],\n      received_msg: [],\n      update_form: \"none\",\n      visible: \"visible\"\n    };\n  }\n\n  componentDidMount() {\n    this.ShowMessages();\n  }\n\n  render() {\n    const myPostList = {\n      visibility: this.state.visible\n    };\n    const form = {\n      margin: \"auto\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\uBC1B\\uC740 \\uCABD\\uC9C0\\uD568\"), React.createElement(\"div\", {\n      style: myPostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\uCABD\\uC9C0\\uBC88\\uD638\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\uBC1C\\uC2E0\\uC778\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\uC0DD\\uC131\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.received_msg.map(message => {\n      return React.createElement(ReceivedMsg, {\n        key: message.id,\n        id: message.id,\n        sender_nick: message.sender_nick,\n        createDate: message.createdAt,\n        updateDate: message.updatedAt,\n        message: message.message\n        /* superDelete={this.delete_post} superUpdate={this.update_post}  */\n        ,\n        entries: this.state.received_msg,\n        showMessages: this.ShowMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"\\uBCF4\\uB0B8 \\uCABD\\uC9C0\\uD568\"), React.createElement(\"div\", {\n      style: myPostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\uCABD\\uC9C0\\uBC88\\uD638\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\uC218\\uC2E0\\uC778\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\uC0DD\\uC131\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.sent_msg.map(message => {\n      return React.createElement(SentMsg, {\n        key: message.id,\n        id: message.id,\n        receiver_nick: message.member.nickname,\n        createDate: message.createdAt,\n        updateDate: message.updatedAt,\n        message: message.message\n        /* superDelete={this.delete_post} superUpdate={this.update_post}  */\n        ,\n        entries: this.state.sent_msg,\n        showMessages: this.ShowMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }))))));\n  }\n\n}\n\nexport default MyMessage;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/message/message.jsx"],"names":["React","Component","Table","TableBody","TableHead","TableRow","TableCell","$","axios","ReceivedMsg","SentMsg","defaults","withCredentials","headers","MyMessage","constructor","props","ShowMessages","user_id","cookie","console","log","send_param","result","post","data","received_msg","setState","sent_msg","err","alert","state","update_form","visible","componentDidMount","render","myPostList","visibility","form","margin","map","message","id","sender_nick","createdAt","updatedAt","member","nickname"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport $ from \"jquery\";\r\nimport axios from \"axios\";\r\nimport ReceivedMsg from \"./ReceivedMsg\";\r\nimport SentMsg from \"./SentMsg\";\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass MyMessage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sent_msg: [],\r\n      received_msg: [],\r\n      update_form: \"none\",\r\n      visible: \"visible\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.ShowMessages();\r\n  }\r\n  ShowMessages = async () => {\r\n    const user_id = $.cookie(\"login_id\");\r\n    console.log(user_id);\r\n    const send_param = { user_id, headers };\r\n    if (user_id) {\r\n      try {\r\n        const result = await axios.post(\"http://localhost:9090/message/allmessages\", send_param);\r\n        if (result.data.received_msg) {\r\n          this.setState({ received_msg: result.data.received_msg });\r\n        }\r\n        if (result.data.sent_msg) {\r\n          this.setState({ sent_msg: result.data.sent_msg });\r\n        }\r\n        console.log(result.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\"로그인이 필요합니다.\");\r\n    }\r\n  };\r\n  render() {\r\n    const myPostList = {\r\n      visibility: this.state.visible\r\n    };\r\n    const form = {\r\n      margin: \"auto\"\r\n    };\r\n    return (\r\n      <div>\r\n        <div style={form}>\r\n          <div>받은 쪽지함</div>\r\n          <div style={myPostList}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>쪽지번호</TableCell>\r\n                  <TableCell>발신인</TableCell>\r\n                  <TableCell>생성일</TableCell>\r\n                  <TableCell>수정일</TableCell>\r\n                  <TableCell>내용</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.received_msg.map(message => {\r\n                  return (\r\n                    <ReceivedMsg\r\n                      key={message.id}\r\n                      id={message.id}\r\n                      sender_nick={message.sender_nick}\r\n                      createDate={message.createdAt}\r\n                      updateDate={message.updatedAt}\r\n                      message={message.message}\r\n                      /* superDelete={this.delete_post} superUpdate={this.update_post}  */ entries={\r\n                        this.state.received_msg\r\n                      }\r\n                      showMessages={this.ShowMessages}\r\n                    />\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div style={form}>\r\n          <div>보낸 쪽지함</div>\r\n          <div style={myPostList}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>쪽지번호</TableCell>\r\n                  <TableCell>수신인</TableCell>\r\n                  <TableCell>생성일</TableCell>\r\n                  <TableCell>수정일</TableCell>\r\n                  <TableCell>내용</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.sent_msg.map(message => {\r\n                  return (\r\n                    <SentMsg\r\n                      key={message.id}\r\n                      id={message.id}\r\n                      receiver_nick={message.member.nickname}\r\n                      createDate={message.createdAt}\r\n                      updateDate={message.updatedAt}\r\n                      message={message.message}\r\n                      /* superDelete={this.delete_post} superUpdate={this.update_post}  */ entries={\r\n                        this.state.sent_msg\r\n                      }\r\n                      showMessages={this.ShowMessages}\r\n                    />\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyMessage;\r\n"]},"metadata":{},"sourceType":"module"}