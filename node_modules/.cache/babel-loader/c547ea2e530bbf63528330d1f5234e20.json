{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\post\\\\mypost.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport MyPostItems from \"./mypostItems\";\nimport { Col } from \"react-bootstrap\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass MyPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowPosts = async () => {\n      const user_id = $.cookie(\"login_id\");\n      console.log(user_id);\n      const send_param = {\n        user_id,\n        headers\n      };\n\n      if (user_id) {\n        try {\n          const result = await axios.post(process.env.REACT_APP_IP.concat(\":\", process.env.REACT_APP_DB_PORT, \"/post/allpost_mine\"), send_param);\n\n          if (result.data.myposts) {\n            this.setState({\n              myposts: result.data.myposts\n            });\n            this.setState({\n              visible: \"visible\"\n            });\n          }\n\n          console.log(result.data);\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        alert(\"로그인이 필요합니다\");\n      }\n    };\n\n    this.update_post = post_id => {\n      this.setState({\n        update_form: \"inline-block\"\n      });\n      this.ShowPosts();\n    };\n\n    this.delete_post = post_id => {\n      const user_id = $.cookie(\"login_id\");\n      const send_param = {\n        post_id,\n        user_id\n      };\n      console.log(send_param);\n      $.post(\"http://70.12.225.87:9090/post/delete\", send_param, returnData => {\n        if (returnData.result) {\n          alert(\"Post 삭제완료\");\n          const filteredItems = this.state.myposts.filter(item => {\n            return item.key !== post_id;\n          });\n          this.setState({\n            myposts: filteredItems\n          });\n          this.ShowPosts();\n        } else {\n          alert(\"삭제 오류\");\n        }\n      });\n    };\n\n    this.state = {\n      myposts: [],\n      update_form: \"none\",\n      visible: \"hidden\"\n    };\n  }\n\n  componentDidMount() {\n    this.ShowPosts();\n  }\n\n  /*     checkMyPost=()=>{\r\n        if(this.state.myposts===[]){\r\n            const result = '등록된 게시글이 없습니다.';\r\n        }else{\r\n            const result = this.state.myposts.map((post) => {\r\n                return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                });\r\n        }\r\n        return {result};\r\n    } */\n  render() {\n    const myPostList = {\n      visibility: this.state.visible\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: myPostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\uAC8C\\uC2DC\\uBC88\\uD638\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC790\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"\\uC0DD\\uC131\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.myposts.map(post => {\n      return React.createElement(MyPostItems, {\n        key: post.id,\n        id: post.id,\n        nickname: post.member.nickname,\n        createDate: post.createdAt,\n        updateDate: post.updatedAt,\n        content: post.content,\n        superDelete: this.delete_post,\n        superUpdate: this.update_post,\n        entries: this.state.myposts,\n        showPosts: this.ShowPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    }), this.checkMyPost))));\n  }\n\n}\n\nexport default MyPost;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/post/mypost.jsx"],"names":["React","Component","axios","$","MyPostItems","Col","Table","TableBody","TableHead","TableRow","TableCell","defaults","withCredentials","headers","MyPost","constructor","props","ShowPosts","user_id","cookie","console","log","send_param","result","post","process","env","REACT_APP_IP","concat","REACT_APP_DB_PORT","data","myposts","setState","visible","err","alert","update_post","post_id","update_form","delete_post","returnData","filteredItems","state","filter","item","key","componentDidMount","render","myPostList","visibility","map","id","member","nickname","createdAt","updatedAt","content","checkMyPost"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nimport MyPostItems from \"./mypostItems\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass MyPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      myposts: [],\r\n      update_form: \"none\",\r\n      visible: \"hidden\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.ShowPosts();\r\n  }\r\n  ShowPosts = async () => {\r\n    const user_id = $.cookie(\"login_id\");\r\n    console.log(user_id);\r\n    const send_param = { user_id, headers };\r\n    if (user_id) {\r\n      try {\r\n        const result = await axios.post(\r\n          process.env.REACT_APP_IP.concat(\":\", process.env.REACT_APP_DB_PORT, \"/post/allpost_mine\"),\r\n          send_param\r\n        );\r\n        if (result.data.myposts) {\r\n          this.setState({\r\n            myposts: result.data.myposts\r\n          });\r\n          this.setState({ visible: \"visible\" });\r\n        }\r\n        console.log(result.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\"로그인이 필요합니다\");\r\n    }\r\n  };\r\n  update_post = post_id => {\r\n    this.setState({\r\n      update_form: \"inline-block\"\r\n    });\r\n    this.ShowPosts();\r\n  };\r\n  delete_post = post_id => {\r\n    const user_id = $.cookie(\"login_id\");\r\n    const send_param = { post_id, user_id };\r\n    console.log(send_param);\r\n    $.post(\"http://70.12.225.87:9090/post/delete\", send_param, returnData => {\r\n      if (returnData.result) {\r\n        alert(\"Post 삭제완료\");\r\n        const filteredItems = this.state.myposts.filter(item => {\r\n          return item.key !== post_id;\r\n        });\r\n        this.setState({\r\n          myposts: filteredItems\r\n        });\r\n        this.ShowPosts();\r\n      } else {\r\n        alert(\"삭제 오류\");\r\n      }\r\n    });\r\n  };\r\n  /*     checkMyPost=()=>{\r\n        if(this.state.myposts===[]){\r\n            const result = '등록된 게시글이 없습니다.';\r\n        }else{\r\n            const result = this.state.myposts.map((post) => {\r\n                return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                });\r\n        }\r\n        return {result};\r\n    } */\r\n\r\n  render() {\r\n    const myPostList = {\r\n      visibility: this.state.visible\r\n    };\r\n    return (\r\n      <div>\r\n        <div style={myPostList}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>게시번호</TableCell>\r\n                <TableCell>작성자</TableCell>\r\n                <TableCell>생성일</TableCell>\r\n                <TableCell>수정일</TableCell>\r\n                <TableCell>내용</TableCell>\r\n                <TableCell></TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.myposts.map(post => {\r\n                return (\r\n                  <MyPostItems\r\n                    key={post.id}\r\n                    id={post.id}\r\n                    nickname={post.member.nickname}\r\n                    createDate={post.createdAt}\r\n                    updateDate={post.updatedAt}\r\n                    content={post.content}\r\n                    superDelete={this.delete_post}\r\n                    superUpdate={this.update_post}\r\n                    entries={this.state.myposts}\r\n                    showPosts={this.ShowPosts}\r\n                  />\r\n                );\r\n              })}\r\n              {this.checkMyPost}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyPost;\r\n"]},"metadata":{},"sourceType":"module"}