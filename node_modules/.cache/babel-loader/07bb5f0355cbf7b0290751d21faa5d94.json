{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import $ from'jquery';import MyPostItems from'./mypostItems';import{Col}from'react-bootstrap';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import TableCell from'@material-ui/core/TableCell';axios.defaults.withCredentials=true;var headers={withCredentials:true};var MyPost=/*#__PURE__*/function(_Component){_inherits(MyPost,_Component);function MyPost(props){var _this;_classCallCheck(this,MyPost);_this=_possibleConstructorReturn(this,_getPrototypeOf(MyPost).call(this,props));_this.ShowPosts=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user_id,send_param,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user_id=$.cookie(\"login_id\");console.log(user_id);send_param={user_id:user_id,headers:headers};if(!user_id){_context.next=17;break;}_context.prev=4;_context.next=7;return axios.post('http://localhost:9090/post/allpost_mine',send_param);case 7:result=_context.sent;if(result.data.myposts){_this.setState({myposts:result.data.myposts});_this.setState({visible:\"visible\"});}console.log(result.data);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](4);console.log(_context.t0);case 15:_context.next=18;break;case 17:alert('로그인이 필요합니다');case 18:case\"end\":return _context.stop();}}},_callee,null,[[4,12]]);}));_this.update_post=function(post_id){_this.setState({update_form:\"inline-block\"});_this.ShowPosts();};_this.delete_post=function(post_id){var user_id=$.cookie(\"login_id\");var send_param={post_id:post_id,user_id:user_id};console.log(send_param);$.post('http://localhost:9090/post/delete',send_param,function(returnData){if(returnData.result){alert(\"Post 삭제완료\");var filteredItems=_this.state.myposts.filter(function(item){return item.key!==post_id;});_this.setState({myposts:filteredItems});_this.ShowPosts();}else{alert(\"삭제 오류\");}});};_this.state={myposts:[],update_form:\"none\",visible:\"hidden\"};return _this;}_createClass(MyPost,[{key:\"componentDidMount\",value:function componentDidMount(){this.ShowPosts();}},{key:\"render\",/*     checkMyPost=()=>{\r\n        if(this.state.myposts===[]){\r\n            const result = '등록된 게시글이 없습니다.';\r\n        }else{\r\n            const result = this.state.myposts.map((post) => {\r\n                return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                });\r\n        }\r\n        return {result};\r\n    } */value:function render(){var _this2=this;var myPostList={visibility:this.state.visible};return React.createElement(\"div\",null,React.createElement(\"div\",{style:myPostList},React.createElement(Table,null,React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,null,\"\\uAC8C\\uC2DC\\uBC88\\uD638\"),React.createElement(TableCell,null,\"\\uC791\\uC131\\uC790\"),React.createElement(TableCell,null,\"\\uC0DD\\uC131\\uC77C\"),React.createElement(TableCell,null,\"\\uC218\\uC815\\uC77C\"),React.createElement(TableCell,null,\"\\uB0B4\\uC6A9\"),React.createElement(TableCell,null),React.createElement(TableCell,null))),React.createElement(TableBody,null,this.state.myposts.map(function(post){return React.createElement(MyPostItems,{key:post.id,id:post.id,nickname:post.member.nickname,createDate:post.createdAt,updateDate:post.updatedAt,content:post.content,superDelete:_this2.delete_post,superUpdate:_this2.update_post,entries:_this2.state.myposts,showPosts:_this2.ShowPosts});}),this.checkMyPost))));}}]);return MyPost;}(Component);export default MyPost;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/post/mypost.jsx"],"names":["React","Component","axios","$","MyPostItems","Col","Table","TableBody","TableHead","TableRow","TableCell","defaults","withCredentials","headers","MyPost","props","ShowPosts","user_id","cookie","console","log","send_param","post","result","data","myposts","setState","visible","alert","update_post","post_id","update_form","delete_post","returnData","filteredItems","state","filter","item","key","myPostList","visibility","map","id","member","nickname","createdAt","updatedAt","content","checkMyPost"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport MyPostItems from './mypostItems';\r\nimport {Col} from 'react-bootstrap';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            myposts: [],\r\n            update_form: \"none\",\r\n            visible: \"hidden\"\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowPosts();\r\n    }\r\n    ShowPosts=async ()=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        console.log(user_id);\r\n        const send_param={user_id, headers};\r\n        if(user_id){\r\n            try{\r\n                const result = await axios.post('http://localhost:9090/post/allpost_mine', send_param);\r\n                if(result.data.myposts){\r\n                    this.setState({\r\n                        myposts: result.data.myposts\r\n                    });\r\n                    this.setState({visible: \"visible\"});\r\n                }\r\n                console.log(result.data);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }else{\r\n            alert('로그인이 필요합니다');\r\n        }\r\n    }\r\n    update_post=(post_id)=>{\r\n        this.setState({\r\n            update_form: \"inline-block\"\r\n        });\r\n        this.ShowPosts();\r\n    }\r\n    delete_post=(post_id)=>{\r\n        const user_id=$.cookie(\"login_id\");\r\n        const send_param={post_id, user_id};\r\n        console.log(send_param);\r\n        $.post('http://localhost:9090/post/delete', send_param, (returnData)=>{\r\n            if(returnData.result){\r\n                alert(\"Post 삭제완료\");\r\n                const filteredItems = this.state.myposts.filter((item)=>{\r\n                    return item.key !== post_id\r\n                });\r\n                this.setState({\r\n                    myposts: filteredItems\r\n                });\r\n                this.ShowPosts();\r\n            }else{\r\n                alert(\"삭제 오류\");\r\n            }\r\n        });\r\n    }\r\n/*     checkMyPost=()=>{\r\n        if(this.state.myposts===[]){\r\n            const result = '등록된 게시글이 없습니다.';\r\n        }else{\r\n            const result = this.state.myposts.map((post) => {\r\n                return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} UpdateDate={post.updatedAt} content={post.content} />\r\n                });\r\n        }\r\n        return {result};\r\n    } */\r\n   \r\n    render(){\r\n        const myPostList={\r\n            visibility: this.state.visible\r\n        }\r\n        return(\r\n            <div>\r\n                <div style={myPostList}>\r\n                    <Table>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                    <TableCell>게시번호</TableCell>\r\n                    <TableCell>작성자</TableCell>\r\n                    <TableCell>생성일</TableCell>\r\n                    <TableCell>수정일</TableCell>\r\n                    <TableCell>내용</TableCell>\r\n                    <TableCell></TableCell>\r\n                    <TableCell></TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.myposts.map((post) => {\r\n                        return <MyPostItems key={post.id} id={post.id} nickname={post.member.nickname} createDate={post.createdAt} updateDate={post.updatedAt} content={post.content} \r\n                                superDelete={this.delete_post} superUpdate={this.update_post} entries={this.state.myposts} showPosts={this.ShowPosts}/>\r\n                        })}\r\n                        {this.checkMyPost}\r\n                    </TableBody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPost;"]},"metadata":{},"sourceType":"module"}