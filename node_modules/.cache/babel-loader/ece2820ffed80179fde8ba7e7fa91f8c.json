{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\message.jsx\";\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport ReceivedMsg from './ReceivedMsg';\nimport SentMsg from './SentMsg';\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass MyMessage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ShowMessages = async () => {\n      const user_id = $.cookie('login_id');\n      console.log(user_id);\n      const send_param = {\n        user_id,\n        headers\n      };\n\n      if (user_id) {\n        try {\n          const result = await axios.post('http://localhost:9090/message/allmessages', send_param);\n\n          if (result.data.received_msg) {\n            this.setState({\n              received_msg: result.data.received_msg\n            });\n          }\n\n          if (result.data.sent_msg) {\n            this.setState({\n              sent_msg: result.data.sent_msg\n            });\n          }\n\n          console.log(result.data);\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        alert('로그인이 필요합니다.');\n      }\n    };\n\n    this.state = {\n      sent_msg: [],\n      received_msg: [],\n      update_form: \"none\",\n      visible: \"visible\"\n    };\n  }\n\n  componentDidMount() {\n    this.ShowMessages();\n  }\n\n  render() {\n    const myPostList = {\n      visibility: this.state.visible\n    };\n    const form = {\n      margin: \"auto\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\uBC1B\\uC740 \\uCABD\\uC9C0\\uD568\"), React.createElement(\"div\", {\n      style: myPostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\uCABD\\uC9C0\\uBC88\\uD638\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\uBC1C\\uC2E0\\uC778\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\uC0DD\\uC131\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.received_msg.map(message => {\n      return React.createElement(ReceivedMsg, {\n        key: message.id,\n        id: message.id,\n        sender_nick: message.sender_nick,\n        createDate: message.createdAt,\n        updateDate: message.updatedAt,\n        message: message.message\n        /* superDelete={this.delete_post} superUpdate={this.update_post}  */\n        ,\n        entries: this.state.received_msg,\n        showMessages: this.ShowMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\uBCF4\\uB0B8 \\uCABD\\uC9C0\\uD568\"), React.createElement(\"div\", {\n      style: myPostList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\uCABD\\uC9C0\\uBC88\\uD638\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"\\uC218\\uC2E0\\uC778\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\uC0DD\\uC131\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\uC218\\uC815\\uC77C\"), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\uB0B4\\uC6A9\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.sent_msg.map(message => {\n      return React.createElement(SentMsg, {\n        key: message.id,\n        id: message.id,\n        receiver_nick: message.memberId,\n        createDate: message.createdAt,\n        updateDate: message.updatedAt,\n        message: message.message\n        /* superDelete={this.delete_post} superUpdate={this.update_post}  */\n        ,\n        entries: this.state.sent_msg,\n        showMessages: this.ShowMessages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }))))));\n  }\n\n}\n\nexport default MyMessage;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/message.jsx"],"names":["React","Component","Table","TableBody","TableHead","TableRow","TableCell","$","axios","ReceivedMsg","SentMsg","defaults","withCredentials","headers","MyMessage","constructor","props","ShowMessages","user_id","cookie","console","log","send_param","result","post","data","received_msg","setState","sent_msg","err","alert","state","update_form","visible","componentDidMount","render","myPostList","visibility","form","margin","map","message","id","sender_nick","createdAt","updatedAt","memberId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport ReceivedMsg from './ReceivedMsg';\r\nimport SentMsg from './SentMsg';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass MyMessage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            sent_msg: [],\r\n            received_msg: [],\r\n            update_form: \"none\",\r\n            visible: \"visible\"\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.ShowMessages();\r\n    }\r\n    ShowMessages=async ()=>{\r\n        const user_id=$.cookie('login_id');\r\n        console.log(user_id);\r\n        const send_param={user_id, headers};\r\n        if(user_id){\r\n            try{\r\n                const result=await axios.post('http://localhost:9090/message/allmessages', send_param);\r\n                if(result.data.received_msg){\r\n                    this.setState({received_msg: result.data.received_msg});\r\n                }\r\n                if(result.data.sent_msg){\r\n                    this.setState({sent_msg: result.data.sent_msg});\r\n                }\r\n                console.log(result.data);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }else{\r\n            alert('로그인이 필요합니다.');\r\n        }\r\n    }\r\n    render(){\r\n        const myPostList={\r\n            visibility: this.state.visible\r\n        }\r\n        const form={\r\n            margin: \"auto\"\r\n        }\r\n        return(\r\n            <div>\r\n                <div style={form}>\r\n                    <div>받은 쪽지함</div>\r\n                    <div style={myPostList}>\r\n                        <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                        <TableCell>쪽지번호</TableCell>\r\n                        <TableCell>발신인</TableCell>\r\n                        <TableCell>생성일</TableCell>\r\n                        <TableCell>수정일</TableCell>\r\n                        <TableCell>내용</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.received_msg.map((message) => {\r\n                            return <ReceivedMsg key={message.id} id={message.id} sender_nick={message.sender_nick} createDate={message.createdAt} updateDate={message.updatedAt} message={message.message} \r\n                                    /* superDelete={this.delete_post} superUpdate={this.update_post}  */entries={this.state.received_msg} showMessages={this.ShowMessages}/>\r\n                            })}\r\n                            \r\n                        </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n                <br /><br />\r\n                <div style={form}>\r\n                    <div>보낸 쪽지함</div>\r\n                    <div style={myPostList}>\r\n                        <Table>\r\n                        <TableHead>\r\n                        <TableRow>\r\n                        <TableCell>쪽지번호</TableCell>\r\n                        <TableCell>수신인</TableCell>\r\n                        <TableCell>생성일</TableCell>\r\n                        <TableCell>수정일</TableCell>\r\n                        <TableCell>내용</TableCell>\r\n                        </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.sent_msg.map((message) => {\r\n                                return <SentMsg key={message.id} id={message.id} receiver_nick={message.memberId} createDate={message.createdAt} updateDate={message.updatedAt} message={message.message} \r\n                                        /* superDelete={this.delete_post} superUpdate={this.update_post}  */entries={this.state.sent_msg} showMessages={this.ShowMessages}/>\r\n                            })}\r\n                        </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyMessage;"]},"metadata":{},"sourceType":"module"}