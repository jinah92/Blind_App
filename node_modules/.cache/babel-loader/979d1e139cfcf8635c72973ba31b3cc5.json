{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\comment\\\\commentItem.jsx\";\nimport React, { Component } from \"react\";\nimport { Badge } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport $ from \"jquery\";\n\nclass CommentItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteComment = commentId => {\n      const send_param = {\n        commentId\n      };\n      console.log(send_param);\n      $.post(\"http://localhost:9090/comment/delete\", send_param, returnData => {\n        if (returnData.message) {\n          alert(\"댓글 삭제 성공\");\n          this.props.ShowComments();\n        } else {\n          alert(\"댓글 삭제 실패\");\n        }\n      });\n    };\n  }\n\n  render() {\n    const comments = this.props.entries.map(comment => {\n      let commentId = comment.id;\n\n      if (comment.member.nickname) {\n        return React.createElement(\"div\", {\n          key: comment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, this.showUsername(comment.member.nickname), \": \", comment.comment, \" \", React.createElement(Moment, {\n          format: \"YYYY-MM-DD HH:mm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, comment.createdAt), \" \", React.createElement(Badge, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: () => {\n            this.deleteComment(commentId);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"\\uB313\\uAE00 \\uC0AD\\uC81C\"));\n      }\n    });\n    return React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, comments);\n  }\n\n}\n\nexport default CommentItem;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/comment/commentItem.jsx"],"names":["React","Component","Badge","Moment","$","CommentItem","deleteComment","commentId","send_param","console","log","post","returnData","message","alert","props","ShowComments","render","comments","entries","map","comment","id","member","nickname","showUsername","createdAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAClCK,aADkC,GAClBC,SAAS,IAAI;AAC3B,YAAMC,UAAU,GAAG;AAAED,QAAAA;AAAF,OAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAJ,MAAAA,CAAC,CAACO,IAAF,CAAO,sCAAP,EAA+CH,UAA/C,EAA2DI,UAAU,IAAI;AACvE,YAAIA,UAAU,CAACC,OAAf,EAAwB;AACtBC,UAAAA,KAAK,CAAC,UAAD,CAAL;AACA,eAAKC,KAAL,CAAWC,YAAX;AACD,SAHD,MAGO;AACLF,UAAAA,KAAK,CAAC,UAAD,CAAL;AACD;AACF,OAPD;AAQD,KAZiC;AAAA;;AAalCG,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuBC,OAAO,IAAI;AACjD,UAAId,SAAS,GAAGc,OAAO,CAACC,EAAxB;;AACA,UAAID,OAAO,CAACE,MAAR,CAAeC,QAAnB,EAA6B;AAC3B,eACE;AAAK,UAAA,GAAG,EAAEH,OAAO,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKG,YAAL,CAAkBJ,OAAO,CAACE,MAAR,CAAeC,QAAjC,CADH,QACiDH,OAAO,CAACA,OADzD,EACkE,GADlE,EAEE,oBAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCA,OAAO,CAACK,SAA3C,CAFF,EAEiE,GAFjE,EAGE,oBAAC,KAAD;AACE,UAAA,OAAO,EAAC,QADV;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKpB,aAAL,CAAmBC,SAAnB;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHF,CADF;AAeD;AACF,KAnBgB,CAAjB;AAoBA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKW,QAAL,CAAP;AACD;;AAnCiC;;AAsCpC,eAAeb,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport Moment from \"react-moment\";\r\nimport $ from \"jquery\";\r\n\r\nclass CommentItem extends Component {\r\n  deleteComment = commentId => {\r\n    const send_param = { commentId };\r\n    console.log(send_param);\r\n    $.post(\"http://localhost:9090/comment/delete\", send_param, returnData => {\r\n      if (returnData.message) {\r\n        alert(\"댓글 삭제 성공\");\r\n        this.props.ShowComments();\r\n      } else {\r\n        alert(\"댓글 삭제 실패\");\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const comments = this.props.entries.map(comment => {\r\n      let commentId = comment.id;\r\n      if (comment.member.nickname) {\r\n        return (\r\n          <div key={comment.id}>\r\n            {this.showUsername(comment.member.nickname)}: {comment.comment}{\" \"}\r\n            <Moment format=\"YYYY-MM-DD HH:mm\">{comment.createdAt}</Moment>{\" \"}\r\n            <Badge\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => {\r\n                this.deleteComment(commentId);\r\n              }}\r\n            >\r\n              댓글 삭제\r\n            </Badge>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return <ol>{comments}</ol>;\r\n  }\r\n}\r\n\r\nexport default CommentItem;\r\n"]},"metadata":{},"sourceType":"module"}