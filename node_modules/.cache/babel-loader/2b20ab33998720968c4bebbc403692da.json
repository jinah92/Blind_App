{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\upload_post.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport axios from \"axios\";\nimport $ from 'jquery';\nimport { HashRouter, NavLink, Route } from 'react-router-dom';\nimport Post from './post';\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass UploadPost extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.upload_post = async () => {\n      if ($.cookie(\"login_id\")) {\n        const send_param = {\n          headers,\n          content: this.postContent.value,\n          memberId: $.cookie(\"login_id\")\n        };\n\n        try {\n          await axios.post('http://localhost:9090/post/upload', send_param).then(returnData => {\n            if (returnData.data.message) {\n              alert(\"Post 등록완료\");\n            } else {\n              alert(\"Post 등록실패\");\n            }\n\n            this.postContent.value = \"\";\n            this.postContent.focus();\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        alert('로그인이 필요합니다');\n      }\n    };\n  }\n\n  render() {\n    const upload_form = {\n      width: \"50%\",\n      height: \"80%\",\n      position: \"fixed\",\n      top: 100,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      margin: \"auto\",\n      textAlign: \"center\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(HashRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment_form\",\n      style: upload_form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\uC5EC\\uB7EC\\uBD84\\uC758 \\uC18C\\uC2DD\\uC744 \\uB4E4\\uB824\\uC8FC\\uC138\\uC694\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"5\",\n      cols: \"10\",\n      placeholder: \"\\uD3EC\\uC2A4\\uD2B8 \\uB0B4\\uC6A9\",\n      ref: ref => this.postContent = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.upload_post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\uAE00 \\uB4F1\\uB85D\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/post\",\n      component: Post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UploadPost;","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/upload_post.jsx"],"names":["React","Component","Button","Form","axios","$","HashRouter","NavLink","Route","Post","defaults","withCredentials","headers","UploadPost","upload_post","cookie","send_param","content","postContent","value","memberId","post","then","returnData","data","message","alert","focus","err","console","log","render","upload_form","width","height","position","top","right","bottom","left","margin","textAlign","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,UAAT,EAAsBC,OAAtB,EAA+BC,KAA/B,QAA2C,kBAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEAL,KAAK,CAACM,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,MAAMC,OAAO,GAAG;AAACD,EAAAA,eAAe,EAAE;AAAlB,CAAhB;;AAEA,MAAME,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAC/Ba,WAD+B,GACjB,YAAS;AACnB,UAAGT,CAAC,CAACU,MAAF,CAAS,UAAT,CAAH,EAAwB;AACpB,cAAMC,UAAU,GAAE;AACdJ,UAAAA,OADc;AAEdK,UAAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBC,KAFZ;AAGdC,UAAAA,QAAQ,EAAEf,CAAC,CAACU,MAAF,CAAS,UAAT;AAHI,SAAlB;;AAKA,YAAG;AACC,gBAAMX,KAAK,CAACiB,IAAN,CAAW,mCAAX,EAAgDL,UAAhD,EACLM,IADK,CACCC,UAAD,IAAc;AAChB,gBAAGA,UAAU,CAACC,IAAX,CAAgBC,OAAnB,EAA2B;AACvBC,cAAAA,KAAK,CAAC,WAAD,CAAL;AACH,aAFD,MAEK;AACDA,cAAAA,KAAK,CAAC,WAAD,CAAL;AACH;;AACD,iBAAKR,WAAL,CAAiBC,KAAjB,GAAuB,EAAvB;AACA,iBAAKD,WAAL,CAAiBS,KAAjB;AACH,WATK,CAAN;AAUH,SAXD,CAWC,OAAMC,GAAN,EAAU;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,OApBD,MAoBK;AACDF,QAAAA,KAAK,CAAC,YAAD,CAAL;AACH;AACJ,KAzB8B;AAAA;;AA0B/BK,EAAAA,MAAM,GAAE;AACJ,UAAMC,WAAW,GAAC;AACdC,MAAAA,KAAK,EAAE,KADO;AAEdC,MAAAA,MAAM,EAAE,KAFM;AAGdC,MAAAA,QAAQ,EAAC,OAHK;AAIdC,MAAAA,GAAG,EAAC,GAJU;AAKdC,MAAAA,KAAK,EAAC,CALQ;AAMdC,MAAAA,MAAM,EAAC,CANO;AAOdC,MAAAA,IAAI,EAAC,CAPS;AAQdC,MAAAA,MAAM,EAAC,MARO;AASdC,MAAAA,SAAS,EAAE;AATG,KAAlB;AAWA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAET,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFADJ,EAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3B,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,8BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,GAAjC;AAAqC,MAAA,IAAI,EAAC,IAA1C;AAA+C,MAAA,WAAW,EAAC,iCAA3D;AAAoE,MAAA,GAAG,EAAEU,GAAG,IAAE,KAAKxB,WAAL,GAAiBwB,GAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFJ,EAQQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoB,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK5B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAApB,CADA,CARR,CADA,EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEL,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdA,CADJ,CADJ;AAuBH;;AA7D8B;;AAgEnC,eAAeI,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Form} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport $ from 'jquery';\r\nimport { HashRouter , NavLink, Route} from 'react-router-dom';\r\nimport Post from './post';\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = {withCredentials: true};\r\n\r\nclass UploadPost extends Component {\r\n    upload_post = async()=>{\r\n        if($.cookie(\"login_id\")){\r\n            const send_param ={\r\n                headers,\r\n                content: this.postContent.value,\r\n                memberId: $.cookie(\"login_id\")\r\n            }\r\n            try{\r\n                await axios.post('http://localhost:9090/post/upload', send_param)\r\n                .then((returnData)=>{\r\n                    if(returnData.data.message){\r\n                        alert(\"Post 등록완료\");\r\n                    }else{\r\n                        alert(\"Post 등록실패\");\r\n                    }\r\n                    this.postContent.value=\"\";\r\n                    this.postContent.focus();\r\n                });\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }else{\r\n            alert('로그인이 필요합니다');\r\n        }        \r\n    }     \r\n    render(){\r\n        const upload_form={\r\n            width: \"50%\",\r\n            height: \"80%\",\r\n            position:\"fixed\",\r\n            top:100,\r\n            right:0,\r\n            bottom:0,\r\n            left:0,\r\n            margin:\"auto\",\r\n            textAlign: \"center\"\r\n        }\r\n        return(\r\n            <div>\r\n                <HashRouter>    \r\n                <div className=\"comment_form\" style={upload_form}>\r\n                    <h2>여러분의 소식을 들려주세요</h2><hr />\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Control as=\"textarea\" rows=\"5\" cols=\"10\" placeholder=\"포스트 내용\" ref={ref=>this.postContent=ref}/>\r\n                        </Form.Group>\r\n                           \r\n                    </Form>\r\n                        <div>\r\n                        <NavLink to='/post'><Button onClick={this.upload_post}>글 등록</Button></NavLink>\r\n                        </div>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <Route path='/post' component={Post}/>\r\n                </div>\r\n                </HashRouter>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadPost;"]},"metadata":{},"sourceType":"module"}