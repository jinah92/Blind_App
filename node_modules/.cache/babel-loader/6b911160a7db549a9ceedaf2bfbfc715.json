{"ast":null,"code":"var _jsxFileName = \"D:\\\\multicampus_coding\\\\ReactProject\\\\blind\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport timelineBoard from './timelineBoard';\n\n(function () {\n  // VARIABLES\n  const timeline = document.querySelector(\".timeline ol\"),\n        elH = document.querySelectorAll(\".timeline li > div\"),\n        arrows = document.querySelectorAll(\".timeline .arrows .arrow\"),\n        arrowPrev = document.querySelector(\".timeline .arrows .arrow__prev\"),\n        arrowNext = document.querySelector(\".timeline .arrows .arrow__next\"),\n        firstItem = document.querySelector(\".timeline li:first-child\"),\n        lastItem = document.querySelector(\".timeline li:last-child\"),\n        xScrolling = 280,\n        disabledClass = \"disabled\"; // START\n\n  window.addEventListener(\"load\", init);\n\n  function init() {\n    setEqualHeights(elH);\n    animateTl(xScrolling, arrows, timeline);\n  } // SET EQUAL HEIGHTS\n\n\n  function setEqualHeights(el) {\n    let counter = 0;\n\n    for (let i = 0; i < el.length; i++) {\n      const singleHeight = el[i].offsetHeight;\n\n      if (counter < singleHeight) {\n        counter = singleHeight;\n      }\n    }\n\n    for (let i = 0; i < el.length; i++) {\n      el[i].style.height = `${counter}px`;\n    }\n  } // CHECK IF AN ELEMENT IS IN VIEWPORT\n  // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n\n\n  function isElementInViewport(el) {\n    const rect = el.getBoundingClientRect();\n    return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n  } // SET STATE OF PREV/NEXT ARROWS\n\n\n  function setBtnState(el, flag = true) {\n    if (flag) {\n      el.classList.add(disabledClass);\n    } else {\n      if (el.classList.contains(disabledClass)) {\n        el.classList.remove(disabledClass);\n      }\n\n      el.disabled = false;\n    }\n  } // ANIMATE TIMELINE\n\n\n  function animateTl(scrolling, el, tl) {\n    let counter = 0;\n\n    for (let i = 0; i < el.length; i++) {\n      el[i].addEventListener(\"click\", function () {\n        if (!arrowPrev.disabled) {\n          arrowPrev.disabled = true;\n        }\n\n        if (!arrowNext.disabled) {\n          arrowNext.disabled = true;\n        }\n\n        const sign = this.classList.contains(\"arrow__prev\") ? \"\" : \"-\";\n\n        if (counter === 0) {\n          tl.style.transform = `translateX(-${scrolling}px)`;\n        } else {\n          const tlStyle = getComputedStyle(tl); // add more browser prefixes if needed here\n\n          const tlTransform = tlStyle.getPropertyValue(\"-webkit-transform\") || tlStyle.getPropertyValue(\"transform\");\n          const values = parseInt(tlTransform.split(\",\")[4]) + parseInt(`${sign}${scrolling}`);\n          tl.style.transform = `translateX(${values}px)`;\n        }\n\n        setTimeout(() => {\n          isElementInViewport(firstItem) ? setBtnState(arrowPrev) : setBtnState(arrowPrev, false);\n          isElementInViewport(lastItem) ? setBtnState(arrowNext) : setBtnState(arrowNext, false);\n        }, 1100);\n        counter++;\n      });\n    }\n  }\n})();\n\nReactDOM.render(React.createElement(\"timelineBoard\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}), document.querySelector('.timeline_main'));","map":{"version":3,"sources":["D:/multicampus_coding/ReactProject/blind/src/index.jsx"],"names":["React","ReactDOM","timelineBoard","timeline","document","querySelector","elH","querySelectorAll","arrows","arrowPrev","arrowNext","firstItem","lastItem","xScrolling","disabledClass","window","addEventListener","init","setEqualHeights","animateTl","el","counter","i","length","singleHeight","offsetHeight","style","height","isElementInViewport","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","setBtnState","flag","classList","add","contains","remove","disabled","scrolling","tl","sign","transform","tlStyle","getComputedStyle","tlTransform","getPropertyValue","values","parseInt","split","setTimeout","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport timelineBoard from './timelineBoard';\r\n\r\n(function() {\r\n\r\n    // VARIABLES\r\n    const timeline = document.querySelector(\".timeline ol\"),\r\n      elH = document.querySelectorAll(\".timeline li > div\"),\r\n      arrows = document.querySelectorAll(\".timeline .arrows .arrow\"),\r\n      arrowPrev = document.querySelector(\".timeline .arrows .arrow__prev\"),\r\n      arrowNext = document.querySelector(\".timeline .arrows .arrow__next\"),\r\n      firstItem = document.querySelector(\".timeline li:first-child\"),\r\n      lastItem = document.querySelector(\".timeline li:last-child\"),\r\n      xScrolling = 280,\r\n      disabledClass = \"disabled\";\r\n  \r\n    // START\r\n    window.addEventListener(\"load\", init);\r\n  \r\n    function init() {\r\n      setEqualHeights(elH);\r\n      animateTl(xScrolling, arrows, timeline);\r\n    }\r\n  \r\n    // SET EQUAL HEIGHTS\r\n    function setEqualHeights(el) {\r\n      let counter = 0;\r\n      for (let i = 0; i < el.length; i++) {\r\n        const singleHeight = el[i].offsetHeight;\r\n  \r\n        if (counter < singleHeight) {\r\n          counter = singleHeight;\r\n        }\r\n      }\r\n  \r\n      for (let i = 0; i < el.length; i++) {\r\n        el[i].style.height = `${counter}px`;\r\n      }\r\n    }\r\n  \r\n    // CHECK IF AN ELEMENT IS IN VIEWPORT\r\n    // http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\r\n    function isElementInViewport(el) {\r\n      const rect = el.getBoundingClientRect();\r\n      return (\r\n        rect.top >= 0 &&\r\n        rect.left >= 0 &&\r\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n      );\r\n    }\r\n  \r\n    // SET STATE OF PREV/NEXT ARROWS\r\n    function setBtnState(el, flag = true) {\r\n      if (flag) {\r\n        el.classList.add(disabledClass);\r\n      } else {\r\n        if (el.classList.contains(disabledClass)) {\r\n          el.classList.remove(disabledClass);\r\n        }\r\n        el.disabled = false;\r\n      }\r\n    }\r\n  \r\n    // ANIMATE TIMELINE\r\n    function animateTl(scrolling, el, tl) {\r\n      let counter = 0;\r\n      for (let i = 0; i < el.length; i++) {\r\n        el[i].addEventListener(\"click\", function() {\r\n          if (!arrowPrev.disabled) {\r\n            arrowPrev.disabled = true;\r\n          }\r\n          if (!arrowNext.disabled) {\r\n            arrowNext.disabled = true;\r\n          }\r\n          const sign = (this.classList.contains(\"arrow__prev\")) ? \"\" : \"-\";\r\n          if (counter === 0) {\r\n            tl.style.transform = `translateX(-${scrolling}px)`;\r\n          } else {\r\n            const tlStyle = getComputedStyle(tl);\r\n            // add more browser prefixes if needed here\r\n            const tlTransform = tlStyle.getPropertyValue(\"-webkit-transform\") || tlStyle.getPropertyValue(\"transform\");\r\n            const values = parseInt(tlTransform.split(\",\")[4]) + parseInt(`${sign}${scrolling}`);\r\n            tl.style.transform = `translateX(${values}px)`;\r\n          }\r\n  \r\n          setTimeout(() => {\r\n            isElementInViewport(firstItem) ? setBtnState(arrowPrev) : setBtnState(arrowPrev, false);\r\n            isElementInViewport(lastItem) ? setBtnState(arrowNext) : setBtnState(arrowNext, false);\r\n          }, 1100);\r\n  \r\n          counter++;\r\n        });\r\n      }\r\n    }\r\n  \r\n  })();\r\n\r\n  ReactDOM.render(\r\n      <timelineBoard/>,\r\n      document.querySelector('.timeline_main')\r\n  );"]},"metadata":{},"sourceType":"module"}